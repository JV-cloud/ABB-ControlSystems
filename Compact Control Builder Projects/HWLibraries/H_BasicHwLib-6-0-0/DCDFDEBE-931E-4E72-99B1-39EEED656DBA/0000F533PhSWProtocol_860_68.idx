<HEAD>
Index of symbols created 2019-09-17 20:56:44.40 
</HEAD>
<SECTIONS=15>
00010000 00013f48 .text
00013f48 00013fe8 .got2
00013fe8 000144a0 .fixup
000144a0 000144b0 .bss
000144b0 000144bc .data
000144bc 000151ae .debug_abbrev
000151ae 0001fded .debug_info
0001fded 000212fc .debug_line
000212fc 00022530 .debug_frame
00022530 0002422d .debug_loc
0002422d 00025e56 .debug_pubnames
00025e56 0002609e .debug_aranges
0002609e 0002629e .debug_ranges
0002629e 000287bc .debug_str
000287bc 000287bc .comment
</SECTIONS>
<SYMBOLS=459>
00000000 PhSWProtocol_860_68.elf EXE_HEAD
00000064 PhSWProtocol_860_68.elf CPhSWProtocol::SetCommonCallbackInterface(ICommonCallback*)
0000019c PhSWProtocol_860_68.elf non-virtual thunk to CPhSWProtocol::PrepareForTermination(teHWFErrorCode*)
000001a4 PhSWProtocol_860_68.elf CPhSWProtocol::PrepareForTermination(teHWFErrorCode*)
000001cc PhSWProtocol_860_68.elf non-virtual thunk to CPhSWProtocol::RemoveHWConfiguration(trHWFAddress, teHWFErrorCode*)
000001d4 PhSWProtocol_860_68.elf CPhSWProtocol::RemoveHWConfiguration(trHWFAddress, teHWFErrorCode*)
00000220 PhSWProtocol_860_68.elf non-virtual thunk to CPhSWProtocol::GetStatus(trHWFAddress, teHWFUnitKind, unsigned long*, unsigned long*, teHWFErrorCode*)
00000228 PhSWProtocol_860_68.elf CPhSWProtocol::GetStatus(trHWFAddress, teHWFUnitKind, unsigned long*, unsigned long*, teHWFErrorCode*)
0000028c PhSWProtocol_860_68.elf CPhSWProtocol::Configure(trHWFAddress const&, teHWFErrorCode*)
00000454 PhSWProtocol_860_68.elf non-virtual thunk to CPhSWProtocol::PhResponsibility(trHWFAddress, teHWFErrorCode*)
0000045c PhSWProtocol_860_68.elf CPhSWProtocol::PhResponsibility(trHWFAddress, teHWFErrorCode*)
000004c8 PhSWProtocol_860_68.elf non-virtual thunk to CPhSWProtocol::PhResponsibilityForRestart(trHWFAddress, teHWFErrorCode*)
000004d0 PhSWProtocol_860_68.elf CPhSWProtocol::PhResponsibilityForRestart(trHWFAddress, teHWFErrorCode*)
00000540 PhSWProtocol_860_68.elf CPhSWProtocol::GetProductInfo(unsigned char*, unsigned char*, unsigned char*, unsigned long)
000005d0 PhSWProtocol_860_68.elf CPhSWProtocol::CPhSWProtocol()
00000654 PhSWProtocol_860_68.elf CPhSWProtocol::CPhSWProtocol()
000006d4 PhSWProtocol_860_68.elf non-virtual thunk to CPhSWProtocol::~CPhSWProtocol()
000006dc PhSWProtocol_860_68.elf non-virtual thunk to CPhSWProtocol::~CPhSWProtocol()
000006e8 PhSWProtocol_860_68.elf CPhSWProtocol::~CPhSWProtocol()
00000748 PhSWProtocol_860_68.elf CPhSWProtocol::~CPhSWProtocol()
000007a4 PhSWProtocol_860_68.elf non-virtual thunk to CPhSWProtocol::~CPhSWProtocol()
000007ac PhSWProtocol_860_68.elf non-virtual thunk to CPhSWProtocol::~CPhSWProtocol()
000007b8 PhSWProtocol_860_68.elf CPhSWProtocol::~CPhSWProtocol()
0000082c PhSWProtocol_860_68.elf ObjectFactory
00000954 PhSWProtocol_860_68.elf operator delete(void*)
00000990 PhSWProtocol_860_68.elf __cxa_pure_virtual
000009c8 PhSWProtocol_860_68.elf CPhCommon_Base::CPhCommon_Base()
00000a2c PhSWProtocol_860_68.elf CPhCommon_Base::CPhCommon_Base()
00000a8c PhSWProtocol_860_68.elf CPhCommon_Base::GetProductInfo(unsigned char*, unsigned char*, unsigned char*, unsigned long)
00000ac8 PhSWProtocol_860_68.elf CPhCommon_Base::SetCommonCallbackInterface(ICommonCallback*)
00000af8 PhSWProtocol_860_68.elf CPhConfig_Base1::PrepareForTermination(teHWFErrorCode*)
00000b28 PhSWProtocol_860_68.elf CPhConfig_Base1::RemoveHWConfiguration(trHWFAddress, teHWFErrorCode*)
00000b58 PhSWProtocol_860_68.elf CPhConfig_Base1::RemoveIoConnection(unsigned long, teHWFErrorCode*)
00000b8c PhSWProtocol_860_68.elf CPhConfig_Base1::PhResponsibilityForRestart(trHWFAddress, teHWFErrorCode*)
00000bbc PhSWProtocol_860_68.elf CPhConfig_Base1::PhResponsibility(trHWFAddress, teHWFErrorCode*)
00000bec PhSWProtocol_860_68.elf CPhConfig_Base1::StartUsingIoConnection(trHWFAddress, unsigned long, teHWFErrorCode*)
00000c20 PhSWProtocol_860_68.elf CPhConfig_Base1::PhResponsibilityForBackupDevice(trHWFAddress, teHWFErrorCode*)
00000c50 PhSWProtocol_860_68.elf CPhConfig_Base1::PhResponsibilityForHotInsert(trHWFAddress, teHWFErrorCode*)
00000c80 PhSWProtocol_860_68.elf CPhConfig_Base1::PerformSwitchover(trHWFAddress, teHWFErrorCode*)
00000cb0 PhSWProtocol_860_68.elf CPhConfig_Base1::StartUsingDevice(trHWFAddress, teHWFErrorCode*)
00000ce0 PhSWProtocol_860_68.elf CPhConfig_Base1::PerformFailover(trHWFAddress, teHWFErrorCode*)
00000d10 PhSWProtocol_860_68.elf CPhClient_Base::ConnectReq(unsigned long, unsigned long*, int*)
00000d48 PhSWProtocol_860_68.elf CPhClient_Base::DisconnectReq(unsigned long, unsigned long, int*)
00000d80 PhSWProtocol_860_68.elf CPhClient_Base::ReadVarReq(unsigned long, int*)
00000db4 PhSWProtocol_860_68.elf CPhClient_Base::WriteVarReq(unsigned long, int*)
00000de8 PhSWProtocol_860_68.elf CPhClient_Base::ReadRawReq(unsigned long, int*)
00000e1c PhSWProtocol_860_68.elf CPhClient_Base::WriteRawReq(unsigned long, int*)
00000e50 PhSWProtocol_860_68.elf CPhClient_Base::AbortRawReq(unsigned long, int*)
00000e84 PhSWProtocol_860_68.elf CPhClient_Base::AbortVarReq(unsigned long, int*)
00000eb8 PhSWProtocol_860_68.elf CPhClient_Base::GetExtendedStatusSize(unsigned long, int*, int*)
00000ef0 PhSWProtocol_860_68.elf CPhClient_Base::GetExtendedStatus(unsigned long, int, teIEC1131Type*, tGCValue*, int*)
00000f30 PhSWProtocol_860_68.elf CPhClient_Base::SetStatus(unsigned long, int, int*)
00000f68 PhSWProtocol_860_68.elf CPhClient_Base::ReadRes(unsigned long, int, int*)
00000fa0 PhSWProtocol_860_68.elf CPhClient_Base::WriteRes(unsigned long, int, int*)
00000fd8 PhSWProtocol_860_68.elf CPhClient_Base1::ConnectReq(unsigned long, unsigned long*, int*)
00001010 PhSWProtocol_860_68.elf CPhClient_Base1::DisconnectReq(unsigned long, unsigned long, int*)
00001048 PhSWProtocol_860_68.elf CPhClient_Base1::ReadVarReq(unsigned long, int*)
0000107c PhSWProtocol_860_68.elf CPhClient_Base1::WriteVarReq(unsigned long, int*)
000010b0 PhSWProtocol_860_68.elf CPhClient_Base1::RegisterVarReq(unsigned long, int*)
000010e4 PhSWProtocol_860_68.elf CPhClient_Base1::ReadRawReq(unsigned long, int*)
00001118 PhSWProtocol_860_68.elf CPhClient_Base1::WriteRawReq(unsigned long, int*)
0000114c PhSWProtocol_860_68.elf CPhClient_Base1::AbortRawReq(unsigned long, int*)
00001180 PhSWProtocol_860_68.elf CPhClient_Base1::AbortVarReq(unsigned long, int*)
000011b4 PhSWProtocol_860_68.elf CPhClient_Base1::TimeoutAbortVarReq(unsigned long, int*)
00001218 PhSWProtocol_860_68.elf CPhClient_Base1::GetExtendedStatusSize(unsigned long, int*, int*)
00001250 PhSWProtocol_860_68.elf CPhClient_Base1::GetExtendedStatus(unsigned long, int, teIEC1131Type*, tGCValue*, int*)
00001290 PhSWProtocol_860_68.elf CPhClient_Base1::BufferTakeForReceive(unsigned long, int*)
000012c4 PhSWProtocol_860_68.elf CPhClient_Base1::BufferGiveForReceive(unsigned long, int, int*)
000012fc PhSWProtocol_860_68.elf CPhClient_Base1::BufferTakeForSend(unsigned long, unsigned int, int*)
00001334 PhSWProtocol_860_68.elf CPhClient_Base1::BufferGiveForSend(unsigned long, unsigned int, int, int*)
00001370 PhSWProtocol_860_68.elf CPhClient_Base1::SetStatus(unsigned long, int, int*)
000013a8 PhSWProtocol_860_68.elf CPhClient_Base1::ReadRes(unsigned long, int, int*)
000013e0 PhSWProtocol_860_68.elf CPhClient_Base1::WriteRes(unsigned long, int, int*)
00001418 PhSWProtocol_860_68.elf CPhStatus_Base1::KickWatchdog(unsigned short*, teHWFErrorCode*)
0000144c PhSWProtocol_860_68.elf CPhStatus_Base1::GetStatus(trHWFAddress, teHWFUnitKind, unsigned long*, unsigned long*, teHWFErrorCode*)
00001488 PhSWProtocol_860_68.elf CPhIOAccess_Base::GetCopyRoutineReference(unsigned int, void (**)(short, void*, void*), IOAccessErrorCode*)
000014c0 PhSWProtocol_860_68.elf CPhIOAccess_Base::ObtainDPM(eAreaType, trHWFAddress, IOAccessErrorCode*)
000014f4 PhSWProtocol_860_68.elf CPhIOAccess_Base::ReleaseDPM(eAreaType, trHWFAddress, IOAccessErrorCode*)
00001528 PhSWProtocol_860_68.elf CPhDiagnostics_Base::PhDiagnosticsTableNew(teDiagErrorCode*)
00001558 PhSWProtocol_860_68.elf CPhDiagnostics_Base::PhDiagnosticsTableCleared(teDiagErrorCode*)
00001588 PhSWProtocol_860_68.elf CPhOLU_Base::PrepareForFirmwareDownload(trHWFAddress const*, unsigned long, eOLUStatus*)
000015c0 PhSWProtocol_860_68.elf CPhOLU_Base::PrepareForApplicationStop(trHWFAddress const*, eOLUStatus*)
000015f4 PhSWProtocol_860_68.elf CPhOLU_Base::ResumeOperation(trHWFAddress const*, eOLUStatus*)
00001628 PhSWProtocol_860_68.elf CPhOLU_Base::PhResponsibilityForOLU(trHWFAddress const*, eOLUStatus*)
0000165c PhSWProtocol_860_68.elf CPhOLU_Base::PrepareForLeavingOLU(trHWFAddress const*, eOLUStatus*)
00001690 PhSWProtocol_860_68.elf CPhOLU_Base::PrepareForAppAndConfigDownload(trHWFAddress const*, eOLUStatus*)
000016c4 PhSWProtocol_860_68.elf CPhOLU_Base1::PrepareForFirmwareDownload(trHWFAddress const*, unsigned long, eOLUStatus*)
000016fc PhSWProtocol_860_68.elf CPhOLU_Base1::PrepareForApplicationStop(trHWFAddress const*, eOLUStatus*)
00001730 PhSWProtocol_860_68.elf CPhOLU_Base1::ResumeOperation(trHWFAddress const*, eOLUStatus*)
00001764 PhSWProtocol_860_68.elf CPhOLU_Base1::PhResponsibilityForOLU(trHWFAddress const*, eOLUStatus*)
00001798 PhSWProtocol_860_68.elf CPhOLU_Base1::PrepareForLeavingOLU(trHWFAddress const*, eOLUStatus*)
000017cc PhSWProtocol_860_68.elf CPhOLU_Base1::PrepareForAppAndConfigDownload(trHWFAddress const*, eOLUStatus*)
00001800 PhSWProtocol_860_68.elf CPhOLU_Base1::OLUEnablePhCom(trHWFAddress const*, eOLUStatus*)
00001834 PhSWProtocol_860_68.elf CPhOLU_Base1::OLUDisablePhCom(trHWFAddress const*, eOLUStatus*)
00001868 PhSWProtocol_860_68.elf CPhOLU_Base1::InformPhIsInSwitch(trHWFAddress const*, eOLUStatus*)
000018a0 PhSWProtocol_860_68.elf CPhCommon_Base::~CPhCommon_Base()
0000191c PhSWProtocol_860_68.elf CPhCommon_Base::~CPhCommon_Base()
00001998 PhSWProtocol_860_68.elf CPhCommon_Base::~CPhCommon_Base()
00001a10 PhSWProtocol_860_68.elf non-virtual thunk to CPhSWProtocol::AddRef()
00001a18 PhSWProtocol_860_68.elf non-virtual thunk to CPhSWProtocol::AddRef()
00001a20 PhSWProtocol_860_68.elf CPhSWProtocol::AddRef()
00001a40 PhSWProtocol_860_68.elf IUnknown::~IUnknown()
00001a84 PhSWProtocol_860_68.elf IUnknown::~IUnknown()
00001ac4 PhSWProtocol_860_68.elf IPhConfig1::~IPhConfig1()
00001b10 PhSWProtocol_860_68.elf IPhConfig1::~IPhConfig1()
00001b58 PhSWProtocol_860_68.elf IPhStatus1::~IPhStatus1()
00001ba4 PhSWProtocol_860_68.elf IPhStatus1::~IPhStatus1()
00001be8 PhSWProtocol_860_68.elf non-virtual thunk to CPhSWProtocol::Release()
00001bf0 PhSWProtocol_860_68.elf non-virtual thunk to CPhSWProtocol::Release()
00001bf8 PhSWProtocol_860_68.elf CPhSWProtocol::Release()
00001c64 PhSWProtocol_860_68.elf non-virtual thunk to CPhSWProtocol::QueryInterface(_GUID const&, void**)
00001c6c PhSWProtocol_860_68.elf non-virtual thunk to CPhSWProtocol::QueryInterface(_GUID const&, void**)
00001c78 PhSWProtocol_860_68.elf CPhSWProtocol::QueryInterface(_GUID const&, void**)
00001d64 PhSWProtocol_860_68.elf IUnknown::IUnknown()
00001dbc PhSWProtocol_860_68.elf IPhCommon::IPhCommon()
00001e20 PhSWProtocol_860_68.elf IUnknown::~IUnknown()
00001e90 PhSWProtocol_860_68.elf IPhConfig1::~IPhConfig1()
00001f0c PhSWProtocol_860_68.elf CPhConfig_Base1::~CPhConfig_Base1()
00001f88 PhSWProtocol_860_68.elf CPhConfig_Base1::~CPhConfig_Base1()
00002004 PhSWProtocol_860_68.elf IPhClient::~IPhClient()
00002080 PhSWProtocol_860_68.elf CPhClient_Base::~CPhClient_Base()
000020fc PhSWProtocol_860_68.elf IPhClient::~IPhClient()
00002178 PhSWProtocol_860_68.elf IPhClient::~IPhClient()
000021f4 PhSWProtocol_860_68.elf CPhClient_Base::~CPhClient_Base()
00002270 PhSWProtocol_860_68.elf IPhClient1::~IPhClient1()
000022ec PhSWProtocol_860_68.elf CPhClient_Base1::~CPhClient_Base1()
00002368 PhSWProtocol_860_68.elf IPhClient1::~IPhClient1()
000023e4 PhSWProtocol_860_68.elf IPhClient1::~IPhClient1()
00002460 PhSWProtocol_860_68.elf CPhClient_Base1::~CPhClient_Base1()
000024dc PhSWProtocol_860_68.elf IPhStatus1::~IPhStatus1()
00002558 PhSWProtocol_860_68.elf CPhStatus_Base1::~CPhStatus_Base1()
000025d4 PhSWProtocol_860_68.elf CPhStatus_Base1::~CPhStatus_Base1()
00002650 PhSWProtocol_860_68.elf IPhIOAccess::~IPhIOAccess()
000026cc PhSWProtocol_860_68.elf CPhIOAccess_Base::~CPhIOAccess_Base()
00002748 PhSWProtocol_860_68.elf IPhIOAccess::~IPhIOAccess()
000027c4 PhSWProtocol_860_68.elf IPhIOAccess::~IPhIOAccess()
00002840 PhSWProtocol_860_68.elf CPhIOAccess_Base::~CPhIOAccess_Base()
000028bc PhSWProtocol_860_68.elf IPhDiagnostics::~IPhDiagnostics()
00002938 PhSWProtocol_860_68.elf CPhDiagnostics_Base::~CPhDiagnostics_Base()
000029b4 PhSWProtocol_860_68.elf IPhDiagnostics::~IPhDiagnostics()
00002a30 PhSWProtocol_860_68.elf IPhDiagnostics::~IPhDiagnostics()
00002aac PhSWProtocol_860_68.elf CPhDiagnostics_Base::~CPhDiagnostics_Base()
00002b28 PhSWProtocol_860_68.elf IPhOLU::~IPhOLU()
00002ba4 PhSWProtocol_860_68.elf CPhOLU_Base::~CPhOLU_Base()
00002c20 PhSWProtocol_860_68.elf IPhOLU::~IPhOLU()
00002c9c PhSWProtocol_860_68.elf IPhOLU::~IPhOLU()
00002d18 PhSWProtocol_860_68.elf CPhOLU_Base::~CPhOLU_Base()
00002d94 PhSWProtocol_860_68.elf IPhOLU1::~IPhOLU1()
00002e10 PhSWProtocol_860_68.elf CPhOLU_Base1::~CPhOLU_Base1()
00002e8c PhSWProtocol_860_68.elf IPhOLU1::~IPhOLU1()
00002f08 PhSWProtocol_860_68.elf IPhOLU1::~IPhOLU1()
00002f84 PhSWProtocol_860_68.elf CPhOLU_Base1::~CPhOLU_Base1()
00003000 PhSWProtocol_860_68.elf IPhCommon::~IPhCommon()
0000307c PhSWProtocol_860_68.elf IPhCommon::~IPhCommon()
000030f8 PhSWProtocol_860_68.elf IPhCommon::~IPhCommon()
00003170 PhSWProtocol_860_68.elf CompanyName
00003174 PhSWProtocol_860_68.elf ProductName
00003184 PhSWProtocol_860_68.elf ProductVersion
0000319c PhSWProtocol_860_68.elf CLSID_CPhSWProtocol
00003204 PhSWProtocol_860_68.elf IID_IPhCommonCB
00003214 PhSWProtocol_860_68.elf IID_IPhConfigCB
00003224 PhSWProtocol_860_68.elf IID_IPhConfigCB1
00003234 PhSWProtocol_860_68.elf IID_IPhIOAccessCB
00003244 PhSWProtocol_860_68.elf IID_IPhExternalConfigCB1
00003254 PhSWProtocol_860_68.elf IID_IPhExternalConfigCB2
00003264 PhSWProtocol_860_68.elf IID_IPhExternalConfigCB3
00003274 PhSWProtocol_860_68.elf IID_IPhOLUCB
00003284 PhSWProtocol_860_68.elf IID_IPhCommon
00003294 PhSWProtocol_860_68.elf IID_IPhConfig1
000032a4 PhSWProtocol_860_68.elf IID_IPhStatus1
000032b4 PhSWProtocol_860_68.elf IID_IPhClient
000032c4 PhSWProtocol_860_68.elf IID_IPhClient1
000032d4 PhSWProtocol_860_68.elf IID_IPhDiagnostics
000032e4 PhSWProtocol_860_68.elf IID_IPhIOAccess
000032f4 PhSWProtocol_860_68.elf IID_IPhSafeConfig
00003304 PhSWProtocol_860_68.elf IID_IPhSafeConfig1
00003314 PhSWProtocol_860_68.elf IID_IPhSafeConfig2
00003324 PhSWProtocol_860_68.elf IID_IPhSimulation
00003334 PhSWProtocol_860_68.elf IID_IPhOLU
00003344 PhSWProtocol_860_68.elf IID_IPhOLU1
00003354 PhSWProtocol_860_68.elf IID_IHeapCallback
00003364 PhSWProtocol_860_68.elf IID_ISystemUtilitiesCallback
00003374 PhSWProtocol_860_68.elf IID_ISystemUtilitiesCallback1
00003384 PhSWProtocol_860_68.elf IID_ISystemUtilitiesCallback2
00003394 PhSWProtocol_860_68.elf IID_ISystemUtilitiesCallback3
000033a4 PhSWProtocol_860_68.elf IID_ISystemUtilitiesCallback4
000033b4 PhSWProtocol_860_68.elf IID_IEventMgrCallback
000033c4 PhSWProtocol_860_68.elf IID_IEventMgrCallback1
000033d4 PhSWProtocol_860_68.elf IID_ISysClockCallback
000033e4 PhSWProtocol_860_68.elf IID_ISysClockCallback1
000033f4 PhSWProtocol_860_68.elf IID_ISysClockCallback2
00003404 PhSWProtocol_860_68.elf IID_ISysClockCallback3
00003414 PhSWProtocol_860_68.elf IID_INetwClockSynchCallback
00003424 PhSWProtocol_860_68.elf IID_IConfigCBCallback1
00003434 PhSWProtocol_860_68.elf IID_IConfigCBCallback2
00003444 PhSWProtocol_860_68.elf IID_IConfigCBCallback3
00003454 PhSWProtocol_860_68.elf IID_IExternalConfigCBCallback
00003464 PhSWProtocol_860_68.elf IID_IExternalConfigCBCallback2
00003474 PhSWProtocol_860_68.elf IID_IExternalConfigCBCallback3
00003484 PhSWProtocol_860_68.elf IID_IExternalConfigCBCallback4
00003494 PhSWProtocol_860_68.elf IID_IMessagesCBCallback
000034a4 PhSWProtocol_860_68.elf IID_IAIPAccessCBCallback
000034b4 PhSWProtocol_860_68.elf IID_IOLUCBCallback
000034c4 PhSWProtocol_860_68.elf IID_IOLUCBCallback1
000034d4 PhSWProtocol_860_68.elf IID_ISystemUtilitiesCBCallback1
000034e4 PhSWProtocol_860_68.elf IID_IConfigCallback1
000034f4 PhSWProtocol_860_68.elf IID_IConfigCallback2
00003504 PhSWProtocol_860_68.elf IID_IStatusCallback1
00003514 PhSWProtocol_860_68.elf IID_IGenClientCallback
00003524 PhSWProtocol_860_68.elf IID_IGenClientCallback1
00003534 PhSWProtocol_860_68.elf IID_IGenClientCallback2
00003544 PhSWProtocol_860_68.elf IID_IIACClientCallback
00003554 PhSWProtocol_860_68.elf IID_IDriverFactoryCallback
00003564 PhSWProtocol_860_68.elf IID_IDiagnosticsCallback
00003574 PhSWProtocol_860_68.elf IID_ISafeConfigCallback
00003584 PhSWProtocol_860_68.elf IID_ISafeConfigCallback1
00003594 PhSWProtocol_860_68.elf IID_ISafeConfigCallback2
000035a4 PhSWProtocol_860_68.elf IID_ICRCCallback
000035b4 PhSWProtocol_860_68.elf IID_IIOAccessCallback
000035c4 PhSWProtocol_860_68.elf IID_CriticalRegionCallback
000035d4 PhSWProtocol_860_68.elf IID_VOSExceptionCallback
000035e4 PhSWProtocol_860_68.elf IID_DrvCommonCallback
000035f4 PhSWProtocol_860_68.elf IID_ProtectedMirroredHeapCallback
00003604 PhSWProtocol_860_68.elf IID_SharedMirroredHeapCallback
00003614 PhSWProtocol_860_68.elf IID_TemporaryMirroredHeapCallback
00003624 PhSWProtocol_860_68.elf IID_IVarServerCallback
00003634 PhSWProtocol_860_68.elf IID_IVarServerCallback1
00003644 PhSWProtocol_860_68.elf IID_IVarServerCallback2
00003654 PhSWProtocol_860_68.elf IID_ISOCKETCallback
00003664 PhSWProtocol_860_68.elf IID_ISOCKETCallback1
00003674 PhSWProtocol_860_68.elf IID_ISOCKETCallback2
00003684 PhSWProtocol_860_68.elf IID_IVOSCallback2
00003740 V vtable for CPhSWProtocol PhSWProtocol_860_68.elf 
000037e8 V vtable for IPhStatus1 PhSWProtocol_860_68.elf 
00003810 V vtable for IUnknown PhSWProtocol_860_68.elf 
00003830 V vtable for IPhConfig1 PhSWProtocol_860_68.elf 
00003878 V vtable for CPhOLU_Base1 PhSWProtocol_860_68.elf 
000038b8 V vtable for CPhOLU_Base PhSWProtocol_860_68.elf 
000038f0 V vtable for CPhDiagnostics_Base PhSWProtocol_860_68.elf 
00003918 V vtable for CPhIOAccess_Base PhSWProtocol_860_68.elf 
00003940 V vtable for CPhStatus_Base1 PhSWProtocol_860_68.elf 
00003968 V vtable for CPhClient_Base1 PhSWProtocol_860_68.elf 
000039d0 V vtable for CPhClient_Base PhSWProtocol_860_68.elf 
00003a20 V vtable for CPhConfig_Base1 PhSWProtocol_860_68.elf 
00003a68 V vtable for CPhCommon_Base PhSWProtocol_860_68.elf 
00003a90 V vtable for IPhClient PhSWProtocol_860_68.elf 
00003ae0 V vtable for IPhClient1 PhSWProtocol_860_68.elf 
00003b48 V vtable for IPhIOAccess PhSWProtocol_860_68.elf 
00003b70 V vtable for IPhDiagnostics PhSWProtocol_860_68.elf 
00003b98 V vtable for IPhOLU PhSWProtocol_860_68.elf 
00003bd0 V vtable for IPhOLU1 PhSWProtocol_860_68.elf 
00003c10 V vtable for IPhCommon PhSWProtocol_860_68.elf 
00003c34 PhSWProtocol_860_68.elf CRTFuncTabBegin
00003c34 PhSWProtocol_860_68.elf scprocs
00003c40 PhSWProtocol_860_68.elf printf
00003c44 PhSWProtocol_860_68.elf sprintf
00003c48 PhSWProtocol_860_68.elf sscanf
00003c4c PhSWProtocol_860_68.elf memcpy
00003c50 PhSWProtocol_860_68.elf memset
00003c54 PhSWProtocol_860_68.elf strcat
00003c58 PhSWProtocol_860_68.elf strcmp
00003c5c PhSWProtocol_860_68.elf strlen
00003c60 PhSWProtocol_860_68.elf strncmp
00003c64 PhSWProtocol_860_68.elf strncpy
00003c68 PhSWProtocol_860_68.elf memchr
00003c6c PhSWProtocol_860_68.elf memcmp
00003c70 PhSWProtocol_860_68.elf memmove
00003c74 PhSWProtocol_860_68.elf strchr
00003c78 PhSWProtocol_860_68.elf strcoll
00003c7c PhSWProtocol_860_68.elf strcpy
00003c80 PhSWProtocol_860_68.elf strcspn
00003c84 PhSWProtocol_860_68.elf strncat
00003c88 PhSWProtocol_860_68.elf strpbrk
00003c8c PhSWProtocol_860_68.elf strrchr
00003c90 PhSWProtocol_860_68.elf strspn
00003c94 PhSWProtocol_860_68.elf strstr
00003c98 PhSWProtocol_860_68.elf strtok
00003c9c PhSWProtocol_860_68.elf strxfrm
00003ca0 PhSWProtocol_860_68.elf strerror
00003ca4 PhSWProtocol_860_68.elf pow
00003ca8 PhSWProtocol_860_68.elf acos
00003cac PhSWProtocol_860_68.elf asin
00003cb0 PhSWProtocol_860_68.elf atan
00003cb4 PhSWProtocol_860_68.elf atan2
00003cb8 PhSWProtocol_860_68.elf ceil
00003cbc PhSWProtocol_860_68.elf cos
00003cc0 PhSWProtocol_860_68.elf cosh
00003cc4 PhSWProtocol_860_68.elf exp
00003cc8 PhSWProtocol_860_68.elf fabs
00003ccc PhSWProtocol_860_68.elf floor
00003cd0 PhSWProtocol_860_68.elf fmod
00003cd4 PhSWProtocol_860_68.elf frexp
00003cd8 PhSWProtocol_860_68.elf ldexp
00003cdc PhSWProtocol_860_68.elf log
00003ce0 PhSWProtocol_860_68.elf log10
00003ce4 PhSWProtocol_860_68.elf modf
00003ce8 PhSWProtocol_860_68.elf sin
00003cec PhSWProtocol_860_68.elf sinh
00003cf0 PhSWProtocol_860_68.elf sqrt
00003cf4 PhSWProtocol_860_68.elf tan
00003cf8 PhSWProtocol_860_68.elf tanh
00003cfc PhSWProtocol_860_68.elf acosf
00003d00 PhSWProtocol_860_68.elf asinf
00003d04 PhSWProtocol_860_68.elf atanf
00003d08 PhSWProtocol_860_68.elf atan2f
00003d0c PhSWProtocol_860_68.elf ceilf
00003d10 PhSWProtocol_860_68.elf cosf
00003d14 PhSWProtocol_860_68.elf coshf
00003d18 PhSWProtocol_860_68.elf expf
00003d1c PhSWProtocol_860_68.elf fabsf
00003d20 PhSWProtocol_860_68.elf floorf
00003d24 PhSWProtocol_860_68.elf fmodf
00003d28 PhSWProtocol_860_68.elf logf
00003d2c PhSWProtocol_860_68.elf log10f
00003d30 PhSWProtocol_860_68.elf powf
00003d34 PhSWProtocol_860_68.elf sinf
00003d38 PhSWProtocol_860_68.elf sinhf
00003d3c PhSWProtocol_860_68.elf sqrtf
00003d40 PhSWProtocol_860_68.elf tanf
00003d44 PhSWProtocol_860_68.elf tanhf
00003d48 PhSWProtocol_860_68.elf div_r
00003d4c PhSWProtocol_860_68.elf labs
00003d50 PhSWProtocol_860_68.elf strtol
00003d54 PhSWProtocol_860_68.elf free
00003d58 PhSWProtocol_860_68.elf abort
00003d5c PhSWProtocol_860_68.elf abs
00003d60 PhSWProtocol_860_68.elf atof
00003d64 PhSWProtocol_860_68.elf atoi
00003d68 PhSWProtocol_860_68.elf atol
00003d6c PhSWProtocol_860_68.elf bsearch
00003d70 PhSWProtocol_860_68.elf ldiv_r
00003d74 PhSWProtocol_860_68.elf qsort
00003d78 PhSWProtocol_860_68.elf rand
00003d7c PhSWProtocol_860_68.elf srand
00003d80 PhSWProtocol_860_68.elf strtod
00003d84 PhSWProtocol_860_68.elf strtoul
00003d88 PhSWProtocol_860_68.elf malloc
00003d8c PhSWProtocol_860_68.elf __assert
00003d90 PhSWProtocol_860_68.elf time
00003d94 PhSWProtocol_860_68.elf asctime
00003d98 PhSWProtocol_860_68.elf gmtime
00003d9c PhSWProtocol_860_68.elf clock
00003da0 PhSWProtocol_860_68.elf ctime
00003da4 PhSWProtocol_860_68.elf difftime
00003da8 PhSWProtocol_860_68.elf localtime
00003dac PhSWProtocol_860_68.elf mktime
00003db0 PhSWProtocol_860_68.elf strftime
00003db4 PhSWProtocol_860_68.elf eventcollSem
00003db8 PhSWProtocol_860_68.elf intLock
00003dbc PhSWProtocol_860_68.elf intUnlock
00003dc0 PhSWProtocol_860_68.elf _fabs
00003dc4 PhSWProtocol_860_68.elf _ddec
00003dc8 PhSWProtocol_860_68.elf _d_mul
00003dcc PhSWProtocol_860_68.elf __floatsidf
00003dd0 PhSWProtocol_860_68.elf _d_sub
00003dd4 PhSWProtocol_860_68.elf _d_add
00003dd8 PhSWProtocol_860_68.elf __fixunsdfsi
00003ddc PhSWProtocol_860_68.elf __extendsfdf2
00003de0 PhSWProtocol_860_68.elf __adddf3
00003de4 PhSWProtocol_860_68.elf _dinc
00003de8 PhSWProtocol_860_68.elf __fixdfsi
00003dec PhSWProtocol_860_68.elf _d_neg
00003df0 PhSWProtocol_860_68.elf _d_dtof
00003df4 PhSWProtocol_860_68.elf _f_qtof
00003df8 PhSWProtocol_860_68.elf _dpfabs
00003dfc PhSWProtocol_860_68.elf _d_dtoq
00003e00 PhSWProtocol_860_68.elf _d_div
00003e04 PhSWProtocol_860_68.elf __negdf2
00003e08 PhSWProtocol_860_68.elf __divdf3
00003e0c PhSWProtocol_860_68.elf __muldf3
00003e10 PhSWProtocol_860_68.elf _d_dtoi
00003e14 PhSWProtocol_860_68.elf _f_ftoq
00003e18 PhSWProtocol_860_68.elf __truncdfsf2
00003e1c PhSWProtocol_860_68.elf _fp_round
00003e20 PhSWProtocol_860_68.elf _d_utod
00003e24 PhSWProtocol_860_68.elf _d_qtod
00003e28 PhSWProtocol_860_68.elf _d_dtou
00003e2c PhSWProtocol_860_68.elf _d_itod
00003e30 PhSWProtocol_860_68.elf __subdf3
00003e34 PhSWProtocol_860_68.elf _f_ftod
00003e38 PhSWProtocol_860_68.elf _d_feq
00003e3c PhSWProtocol_860_68.elf __gtdf2
00003e40 PhSWProtocol_860_68.elf _d_fne
00003e44 PhSWProtocol_860_68.elf _d_cmp
00003e48 PhSWProtocol_860_68.elf _d_flt
00003e4c PhSWProtocol_860_68.elf _d_cmpe
00003e50 PhSWProtocol_860_68.elf __nedf2
00003e54 PhSWProtocol_860_68.elf _d_fgt
00003e58 PhSWProtocol_860_68.elf _d_fle
00003e5c PhSWProtocol_860_68.elf _d_fge
00003e60 PhSWProtocol_860_68.elf _fdec
00003e64 PhSWProtocol_860_68.elf _f_add
00003e68 PhSWProtocol_860_68.elf __divsf3
00003e6c PhSWProtocol_860_68.elf __fixsfsi
00003e70 PhSWProtocol_860_68.elf __subsf3
00003e74 PhSWProtocol_860_68.elf _finc
00003e78 PhSWProtocol_860_68.elf _f_neg
00003e7c PhSWProtocol_860_68.elf _f_sub
00003e80 PhSWProtocol_860_68.elf _f_itof
00003e84 PhSWProtocol_860_68.elf _fabsf
00003e88 PhSWProtocol_860_68.elf _f_utof
00003e8c PhSWProtocol_860_68.elf _fpfabs
00003e90 PhSWProtocol_860_68.elf __floatsisf
00003e94 PhSWProtocol_860_68.elf _f_div
00003e98 PhSWProtocol_860_68.elf __negsf2
00003e9c PhSWProtocol_860_68.elf __mulsf3
00003ea0 PhSWProtocol_860_68.elf _f_ftoi
00003ea4 PhSWProtocol_860_68.elf _f_mul
00003ea8 PhSWProtocol_860_68.elf __fixunssfsi
00003eac PhSWProtocol_860_68.elf _f_ftou
00003eb0 PhSWProtocol_860_68.elf __addsf3
00003eb4 PhSWProtocol_860_68.elf _f_feq
00003eb8 PhSWProtocol_860_68.elf _f_flt
00003ebc PhSWProtocol_860_68.elf _f_fle
00003ec0 PhSWProtocol_860_68.elf __nesf2
00003ec4 PhSWProtocol_860_68.elf __gtsf2
00003ec8 PhSWProtocol_860_68.elf _f_fge
00003ecc PhSWProtocol_860_68.elf _f_fgt
00003ed0 PhSWProtocol_860_68.elf _f_fne
00003ed4 PhSWProtocol_860_68.elf _f_cmp
00003ed8 PhSWProtocol_860_68.elf _f_cmpe
00003edc PhSWProtocol_860_68.elf ldexpf
00003ee0 PhSWProtocol_860_68.elf modff
00003ee4 PhSWProtocol_860_68.elf frexpf
00003ee8 PhSWProtocol_860_68.elf exadd
00003eec PhSWProtocol_860_68.elf exmul
00003ef0 PhSWProtocol_860_68.elf sigmax
00003ef4 PhSWProtocol_860_68.elf exdiv
00003ef8 PhSWProtocol_860_68.elf exsub
00003efc PhSWProtocol_860_68.elf __eqdf2
00003f00 PhSWProtocol_860_68.elf __ltdf2
00003f04 PhSWProtocol_860_68.elf __lesf2
00003f08 PhSWProtocol_860_68.elf __ledf2
00003f0c PhSWProtocol_860_68.elf __eqsf2
00003f10 PhSWProtocol_860_68.elf __ltsf2
00003f14 PhSWProtocol_860_68.elf __gesf2
00003f18 PhSWProtocol_860_68.elf __gedf2
00003f24 PhSWProtocol_860_68.elf fprintf
00003f28 PhSWProtocol_860_68.elf __stdout
00003f2c PhSWProtocol_860_68.elf __stderr
00003f30 PhSWProtocol_860_68.elf setjmp
00003f34 PhSWProtocol_860_68.elf longjmp
00003f38 PhSWProtocol_860_68.elf operator new[](unsigned int)
00003f3c PhSWProtocol_860_68.elf operator delete[](void*)
00003f40 PhSWProtocol_860_68.elf __floatunsisf
00003f44 PhSWProtocol_860_68.elf __floatunsidf
00003f48 PhSWProtocol_860_68.elf CRTFuncTabEnd
00003f48 PhSWProtocol_860_68.elf ecprocs
00003f48 PhSWProtocol_860_68.elf etext
00003f48 PhSWProtocol_860_68.elf sgot2
00003fe8 PhSWProtocol_860_68.elf egot2
00003fe8 PhSWProtocol_860_68.elf sfixup
000044a0 PhSWProtocol_860_68.elf CMirroredObject::c_pMirroredObjectMgrImpl
000044a0 PhSWProtocol_860_68.elf efixup
000044a4 PhSWProtocol_860_68.elf CMirroredObjectAgent::c_pHeapCallback
000044a8 PhSWProtocol_860_68.elf CMirroredObjectAgent::c_AgentTag
000044ac V CComCoClass<CPhSWProtocol, &(CLSID_CPhSWProtocol)>::m_HeapTag PhSWProtocol_860_68.elf 
000044b0 PhSWProtocol_860_68.elf PHproperties
000044b8 PhSWProtocol_860_68.elf useEXEHEAD
</SYMBOLS>
