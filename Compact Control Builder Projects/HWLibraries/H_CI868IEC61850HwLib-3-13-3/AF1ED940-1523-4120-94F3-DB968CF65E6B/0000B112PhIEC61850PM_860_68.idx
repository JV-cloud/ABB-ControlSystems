<HEAD>
Index of symbols created Tue 05/21/2019 17:56:10.02 
</HEAD>
<SECTIONS=15>
00010000 00027b40 .text
00027b40 00028140 .got2
00028140 00028850 .fixup
00028850 00028860 .bss
00028860 00028894 .data
00028894 0002a8f0 .debug_abbrev
0002a8f0 00045642 .debug_info
00045642 00049d7c .debug_line
00049d7c 0004ce64 .debug_frame
0004ce64 000576ef .debug_loc
000576ef 0005aca6 .debug_pubnames
0005aca6 0005af8e .debug_aranges
0005af8e 0005b71e .debug_ranges
0005b71e 0006523f .debug_str
0006523f 0006523f .comment
</SECTIONS>
<SYMBOLS=677>
00000000 PhIEC61850PM_860_68.elf EXE_HEAD
00000064 PhIEC61850PM_860_68.elf CPhIEC61850PM::CheckCompatibility(trHWFAddress const*, tFirmwareInfo, unsigned long*, unsigned long*)
00000418 PhIEC61850PM_860_68.elf CPhIEC61850PM::CheckMmsSupport(char const*) const
000005f8 PhIEC61850PM_860_68.elf CPhIEC61850PM::FetchRequiredFirmwareInfo(tFirmwareInfo&)
00000654 PhIEC61850PM_860_68.elf CPhIEC61850PM::SetCommonCallbackInterface(ICommonCallback*)
00000700 PhIEC61850PM_860_68.elf CPhIEC61850PM::StartSOEThread(unsigned short)
000008a8 PhIEC61850PM_860_68.elf CPhIEC61850PM::GenerateExtEvent()
00000b18 PhIEC61850PM_860_68.elf CPhIEC61850PM::GetProductInfo(unsigned char*, unsigned char*, unsigned char*, unsigned long)
00000ba8 PhIEC61850PM_860_68.elf CPhIEC61850PM::SOEThreadWork(int)
00000dcc PhIEC61850PM_860_68.elf SOEThread(int, int, int, int)
00000ddc PhIEC61850PM_860_68.elf CPhIEC61850PM::ProtocolSpecificConfigurationValues(trHWFAddress, bool&, unsigned long&, unsigned long&, unsigned short&, unsigned long&)
00000f04 PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::~CPhIEC61850PM()
00000f0c PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::~CPhIEC61850PM()
00000f14 PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::~CPhIEC61850PM()
00000f1c PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::~CPhIEC61850PM()
00000f28 PhIEC61850PM_860_68.elf CPhIEC61850PM::~CPhIEC61850PM()
00000fe4 PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::~CPhIEC61850PM()
00000fec PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::~CPhIEC61850PM()
00000ff4 PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::~CPhIEC61850PM()
00000ffc PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::~CPhIEC61850PM()
00001008 PhIEC61850PM_860_68.elf CPhIEC61850PM::~CPhIEC61850PM()
000010c0 PhIEC61850PM_860_68.elf CPhIEC61850PM::~CPhIEC61850PM()
00001178 PhIEC61850PM_860_68.elf CPhIEC61850PM::CPhIEC61850PM()
0000120c PhIEC61850PM_860_68.elf CPhIEC61850PM::CPhIEC61850PM()
000012a0 PhIEC61850PM_860_68.elf ObjectFactory
000013c8 PhIEC61850PM_860_68.elf operator delete(void*)
00001404 PhIEC61850PM_860_68.elf __cxa_pure_virtual
0000143c PhIEC61850PM_860_68.elf CPhCommon_Base::CPhCommon_Base()
000014a0 PhIEC61850PM_860_68.elf CPhCommon_Base::CPhCommon_Base()
00001500 PhIEC61850PM_860_68.elf CPhCommon_Base::GetProductInfo(unsigned char*, unsigned char*, unsigned char*, unsigned long)
0000153c PhIEC61850PM_860_68.elf CPhCommon_Base::SetCommonCallbackInterface(ICommonCallback*)
0000156c PhIEC61850PM_860_68.elf CPhConfig_Base1::PrepareForTermination(teHWFErrorCode*)
0000159c PhIEC61850PM_860_68.elf CPhConfig_Base1::RemoveHWConfiguration(trHWFAddress, teHWFErrorCode*)
000015cc PhIEC61850PM_860_68.elf CPhConfig_Base1::RemoveIoConnection(unsigned long, teHWFErrorCode*)
00001600 PhIEC61850PM_860_68.elf CPhConfig_Base1::PhResponsibilityForRestart(trHWFAddress, teHWFErrorCode*)
00001630 PhIEC61850PM_860_68.elf CPhConfig_Base1::PhResponsibility(trHWFAddress, teHWFErrorCode*)
00001660 PhIEC61850PM_860_68.elf CPhConfig_Base1::StartUsingIoConnection(trHWFAddress, unsigned long, teHWFErrorCode*)
00001694 PhIEC61850PM_860_68.elf CPhConfig_Base1::PhResponsibilityForBackupDevice(trHWFAddress, teHWFErrorCode*)
000016c4 PhIEC61850PM_860_68.elf CPhConfig_Base1::PhResponsibilityForHotInsert(trHWFAddress, teHWFErrorCode*)
000016f4 PhIEC61850PM_860_68.elf CPhConfig_Base1::PerformSwitchover(trHWFAddress, teHWFErrorCode*)
00001724 PhIEC61850PM_860_68.elf CPhConfig_Base1::StartUsingDevice(trHWFAddress, teHWFErrorCode*)
00001754 PhIEC61850PM_860_68.elf CPhConfig_Base1::PerformFailover(trHWFAddress, teHWFErrorCode*)
00001784 PhIEC61850PM_860_68.elf CPhClient_Base::ConnectReq(unsigned long, unsigned long*, int*)
000017bc PhIEC61850PM_860_68.elf CPhClient_Base::DisconnectReq(unsigned long, unsigned long, int*)
000017f4 PhIEC61850PM_860_68.elf CPhClient_Base::ReadVarReq(unsigned long, int*)
00001828 PhIEC61850PM_860_68.elf CPhClient_Base::WriteVarReq(unsigned long, int*)
0000185c PhIEC61850PM_860_68.elf CPhClient_Base::ReadRawReq(unsigned long, int*)
00001890 PhIEC61850PM_860_68.elf CPhClient_Base::WriteRawReq(unsigned long, int*)
000018c4 PhIEC61850PM_860_68.elf CPhClient_Base::AbortRawReq(unsigned long, int*)
000018f8 PhIEC61850PM_860_68.elf CPhClient_Base::AbortVarReq(unsigned long, int*)
0000192c PhIEC61850PM_860_68.elf CPhClient_Base::GetExtendedStatusSize(unsigned long, int*, int*)
00001964 PhIEC61850PM_860_68.elf CPhClient_Base::GetExtendedStatus(unsigned long, int, teIEC1131Type*, tGCValue*, int*)
000019a4 PhIEC61850PM_860_68.elf CPhClient_Base::SetStatus(unsigned long, int, int*)
000019dc PhIEC61850PM_860_68.elf CPhClient_Base::ReadRes(unsigned long, int, int*)
00001a14 PhIEC61850PM_860_68.elf CPhClient_Base::WriteRes(unsigned long, int, int*)
00001a4c PhIEC61850PM_860_68.elf CPhClient_Base1::ConnectReq(unsigned long, unsigned long*, int*)
00001a84 PhIEC61850PM_860_68.elf CPhClient_Base1::DisconnectReq(unsigned long, unsigned long, int*)
00001abc PhIEC61850PM_860_68.elf CPhClient_Base1::ReadVarReq(unsigned long, int*)
00001af0 PhIEC61850PM_860_68.elf CPhClient_Base1::WriteVarReq(unsigned long, int*)
00001b24 PhIEC61850PM_860_68.elf CPhClient_Base1::RegisterVarReq(unsigned long, int*)
00001b58 PhIEC61850PM_860_68.elf CPhClient_Base1::ReadRawReq(unsigned long, int*)
00001b8c PhIEC61850PM_860_68.elf CPhClient_Base1::WriteRawReq(unsigned long, int*)
00001bc0 PhIEC61850PM_860_68.elf CPhClient_Base1::AbortRawReq(unsigned long, int*)
00001bf4 PhIEC61850PM_860_68.elf CPhClient_Base1::AbortVarReq(unsigned long, int*)
00001c28 PhIEC61850PM_860_68.elf CPhClient_Base1::TimeoutAbortVarReq(unsigned long, int*)
00001c8c PhIEC61850PM_860_68.elf CPhClient_Base1::GetExtendedStatusSize(unsigned long, int*, int*)
00001cc4 PhIEC61850PM_860_68.elf CPhClient_Base1::GetExtendedStatus(unsigned long, int, teIEC1131Type*, tGCValue*, int*)
00001d04 PhIEC61850PM_860_68.elf CPhClient_Base1::BufferTakeForReceive(unsigned long, int*)
00001d38 PhIEC61850PM_860_68.elf CPhClient_Base1::BufferGiveForReceive(unsigned long, int, int*)
00001d70 PhIEC61850PM_860_68.elf CPhClient_Base1::BufferTakeForSend(unsigned long, unsigned int, int*)
00001da8 PhIEC61850PM_860_68.elf CPhClient_Base1::BufferGiveForSend(unsigned long, unsigned int, int, int*)
00001de4 PhIEC61850PM_860_68.elf CPhClient_Base1::SetStatus(unsigned long, int, int*)
00001e1c PhIEC61850PM_860_68.elf CPhClient_Base1::ReadRes(unsigned long, int, int*)
00001e54 PhIEC61850PM_860_68.elf CPhClient_Base1::WriteRes(unsigned long, int, int*)
00001e8c PhIEC61850PM_860_68.elf CPhStatus_Base1::KickWatchdog(unsigned short*, teHWFErrorCode*)
00001ec0 PhIEC61850PM_860_68.elf CPhStatus_Base1::GetStatus(trHWFAddress, teHWFUnitKind, unsigned long*, unsigned long*, teHWFErrorCode*)
00001efc PhIEC61850PM_860_68.elf CPhIOAccess_Base::GetCopyRoutineReference(unsigned int, void (**)(short, void*, void*), IOAccessErrorCode*)
00001f34 PhIEC61850PM_860_68.elf CPhIOAccess_Base::ObtainDPM(eAreaType, trHWFAddress, IOAccessErrorCode*)
00001f68 PhIEC61850PM_860_68.elf CPhIOAccess_Base::ReleaseDPM(eAreaType, trHWFAddress, IOAccessErrorCode*)
00001f9c PhIEC61850PM_860_68.elf CPhDiagnostics_Base::PhDiagnosticsTableNew(teDiagErrorCode*)
00001fcc PhIEC61850PM_860_68.elf CPhDiagnostics_Base::PhDiagnosticsTableCleared(teDiagErrorCode*)
00001ffc PhIEC61850PM_860_68.elf CPhOLU_Base::PrepareForFirmwareDownload(trHWFAddress const*, unsigned long, eOLUStatus*)
00002034 PhIEC61850PM_860_68.elf CPhOLU_Base::PrepareForApplicationStop(trHWFAddress const*, eOLUStatus*)
00002068 PhIEC61850PM_860_68.elf CPhOLU_Base::ResumeOperation(trHWFAddress const*, eOLUStatus*)
0000209c PhIEC61850PM_860_68.elf CPhOLU_Base::PhResponsibilityForOLU(trHWFAddress const*, eOLUStatus*)
000020d0 PhIEC61850PM_860_68.elf CPhOLU_Base::PrepareForLeavingOLU(trHWFAddress const*, eOLUStatus*)
00002104 PhIEC61850PM_860_68.elf CPhOLU_Base::PrepareForAppAndConfigDownload(trHWFAddress const*, eOLUStatus*)
00002138 PhIEC61850PM_860_68.elf CPhOLU_Base1::PrepareForFirmwareDownload(trHWFAddress const*, unsigned long, eOLUStatus*)
00002170 PhIEC61850PM_860_68.elf CPhOLU_Base1::PrepareForApplicationStop(trHWFAddress const*, eOLUStatus*)
000021a4 PhIEC61850PM_860_68.elf CPhOLU_Base1::ResumeOperation(trHWFAddress const*, eOLUStatus*)
000021d8 PhIEC61850PM_860_68.elf CPhOLU_Base1::PhResponsibilityForOLU(trHWFAddress const*, eOLUStatus*)
0000220c PhIEC61850PM_860_68.elf CPhOLU_Base1::PrepareForLeavingOLU(trHWFAddress const*, eOLUStatus*)
00002240 PhIEC61850PM_860_68.elf CPhOLU_Base1::PrepareForAppAndConfigDownload(trHWFAddress const*, eOLUStatus*)
00002274 PhIEC61850PM_860_68.elf CPhOLU_Base1::OLUEnablePhCom(trHWFAddress const*, eOLUStatus*)
000022a8 PhIEC61850PM_860_68.elf CPhOLU_Base1::OLUDisablePhCom(trHWFAddress const*, eOLUStatus*)
000022dc PhIEC61850PM_860_68.elf CPhOLU_Base1::InformPhIsInSwitch(trHWFAddress const*, eOLUStatus*)
00002314 PhIEC61850PM_860_68.elf CPhCommon_Base::~CPhCommon_Base()
00002390 PhIEC61850PM_860_68.elf CPhCommon_Base::~CPhCommon_Base()
0000240c PhIEC61850PM_860_68.elf CPhCommon_Base::~CPhCommon_Base()
00002488 PhIEC61850PM_860_68.elf CPMLogger::CPMLogger()
000024e0 PhIEC61850PM_860_68.elf CPMLogger::CPMLogger()
00002534 PhIEC61850PM_860_68.elf CPMLogger::SetInterfacePointers(ISystemUtilitiesCallback4*)
00002544 PhIEC61850PM_860_68.elf CPMLogger::UpdateTraceSettings(unsigned long)
00002554 PhIEC61850PM_860_68.elf CPMLogger::GetTraceSettings()
00002568 PhIEC61850PM_860_68.elf CPMLogger::UpdateStrHeader()
000025e8 PhIEC61850PM_860_68.elf CPMLogger::SetCIModulePos(int)
00002618 PhIEC61850PM_860_68.elf CPMLogger::NotifyUser(unsigned long, unsigned long)
000026b8 PhIEC61850PM_860_68.elf CPMLogger::PrintConfBuffer(char const*, char const*, int, tePMMsgClassMask)
000027d4 PhIEC61850PM_860_68.elf CPMLogger::Trace(char const*, tePMMsgClassMask)
000028d0 PhIEC61850PM_860_68.elf CPMLogger::Warning(char const*, int)
000029b0 PhIEC61850PM_860_68.elf CPMLogger::Warning(char const*)
00002a8c PhIEC61850PM_860_68.elf CPMLogger::Info(char const*, int)
00002b6c PhIEC61850PM_860_68.elf CPMLogger::Info(char const*)
00002c48 PhIEC61850PM_860_68.elf CPMLogger::Error(char const*, int)
00002d28 PhIEC61850PM_860_68.elf CPMLogger::Error(char const*)
00002e04 PhIEC61850PM_860_68.elf CPMLogger::HwAddrToString(char*, char const*, trHWFAddress)
00002f10 PhIEC61850PM_860_68.elf CPMLogger::Trace(char const*, trHWFAddress, tePMMsgClassMask)
00003060 PhIEC61850PM_860_68.elf CPMLogger::~CPMLogger()
000030a4 PhIEC61850PM_860_68.elf CPMLogger::~CPMLogger()
000030e4 PhIEC61850PM_860_68.elf CPMLogger::~CPMLogger()
00003120 PhIEC61850PM_860_68.elf CListOfAllocatedItems::Item(unsigned long)
00003160 PhIEC61850PM_860_68.elf CListOfAllocatedItems::GetArray(unsigned long*)
00003178 PhIEC61850PM_860_68.elf CListOfAllocatedItems::AllocateMemory(unsigned long)
000031cc PhIEC61850PM_860_68.elf CListOfAllocatedItems::CListOfAllocatedItems(unsigned long, void*, int)
00003248 PhIEC61850PM_860_68.elf CListOfAllocatedItems::CListOfAllocatedItems(unsigned long, void*, int)
000032c4 PhIEC61850PM_860_68.elf CListOfAllocatedItems::FreeMemory(unsigned char*)
00003308 PhIEC61850PM_860_68.elf CListOfAllocatedItems::~CListOfAllocatedItems()
00003328 PhIEC61850PM_860_68.elf CListOfAllocatedItems::~CListOfAllocatedItems()
00003348 PhIEC61850PM_860_68.elf CPhPMBase::ProcessHWunit(unsigned char**, unsigned long*)
00003354 PhIEC61850PM_860_68.elf CPhPMBase::ProcessSubHwUnitStatus(trHWFAddress, unsigned long*, unsigned long*, bool)
00003360 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::PrepareForFirmwareDownload(trHWFAddress const*, unsigned long, eOLUStatus*)
00003368 PhIEC61850PM_860_68.elf CPhPMBase::PrepareForFirmwareDownload(trHWFAddress const*, unsigned long, eOLUStatus*)
000033a0 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::PrepareForAppAndConfigDownload(trHWFAddress const*, eOLUStatus*)
000033a8 PhIEC61850PM_860_68.elf CPhPMBase::PrepareForAppAndConfigDownload(trHWFAddress const*, eOLUStatus*)
000033e0 PhIEC61850PM_860_68.elf CPhPMBase::ProtocolSpecificConfigurationValues(trHWFAddress, bool&, unsigned long&, unsigned long&, unsigned short&, unsigned long&)
000033ec PhIEC61850PM_860_68.elf CPhPMBase::WaitForCIFailoverPerformed()
000033fc PhIEC61850PM_860_68.elf CPhPMBase::SwitchoverThread()
0000359c PhIEC61850PM_860_68.elf spawnSwitchoverThread(int, int, int, int)
000035ac PhIEC61850PM_860_68.elf CPhPMBase::DriverForCIModuleClosed(int)
000035f0 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::PrepareForLeavingOLU(trHWFAddress const*, eOLUStatus*)
000035f8 PhIEC61850PM_860_68.elf CPhPMBase::PrepareForLeavingOLU(trHWFAddress const*, eOLUStatus*)
000036d0 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::PhResponsibilityForOLU(trHWFAddress const*, eOLUStatus*)
000036dc PhIEC61850PM_860_68.elf CPhPMBase::PhResponsibilityForOLU(trHWFAddress const*, eOLUStatus*)
000037b0 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::ResumeOperation(trHWFAddress const*, eOLUStatus*)
000037b8 PhIEC61850PM_860_68.elf CPhPMBase::ResumeOperation(trHWFAddress const*, eOLUStatus*)
00003884 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::PrepareForApplicationStop(trHWFAddress const*, eOLUStatus*)
0000388c PhIEC61850PM_860_68.elf CPhPMBase::PrepareForApplicationStop(trHWFAddress const*, eOLUStatus*)
00003958 PhIEC61850PM_860_68.elf CPhPMBase::SetAllIoConnectionStarted()
000039e4 PhIEC61850PM_860_68.elf CPhPMBase::HandleThreadSupervision()
00003b78 PhIEC61850PM_860_68.elf CPhPMBase::HandleCItoCIMessages(int, unsigned long, ENUM_TRANSCEIVER_MSG_TYPE, unsigned char*, unsigned long)
00003c94 PhIEC61850PM_860_68.elf CPhPMBase::WriteToDriver(int, ENUM_TRANSCEIVER_MSG_TYPE, unsigned char*, unsigned long)
00003d9c PhIEC61850PM_860_68.elf CPhPMBase::HandleSwitchoverRequest(int)
00004010 PhIEC61850PM_860_68.elf CPhPMBase::TimeSynch(TRANSCEIVER_TIMESYNCHDATA*)
000041ec PhIEC61850PM_860_68.elf CPhPMBase::Init(trHWFAddress, teHWFErrorCode*)
00004728 PhIEC61850PM_860_68.elf CPhPMBase::HandleStatusMsg(TRANSCEIVER_STATUSDATA*, unsigned long, bool)
00004aac PhIEC61850PM_860_68.elf CPhPMBase::HandleHighPrioCIMessagesThread()
00004cb0 PhIEC61850PM_860_68.elf spawnHighPriorityMessgeHandleThread(int, int, int, int)
00004cc0 PhIEC61850PM_860_68.elf CPhPMBase::RestartCIModule()
00004f00 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::StartUsingDevice(trHWFAddress, teHWFErrorCode*)
00004f0c PhIEC61850PM_860_68.elf CPhPMBase::StartUsingDevice(trHWFAddress, teHWFErrorCode*)
00004ffc PhIEC61850PM_860_68.elf CPhPMBase::SendCommand(int, int, teHWFErrorCode*)
000050e4 PhIEC61850PM_860_68.elf CPhPMBase::SendLogSettings(int, teHWFErrorCode*)
000051f4 PhIEC61850PM_860_68.elf CPhPMBase::SendAllIOConnectionStarted(int, teHWFErrorCode*)
000052cc PhIEC61850PM_860_68.elf CPhPMBase::SendLastNodeConfigured(int)
00005368 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::RemoveHWConfiguration(trHWFAddress, teHWFErrorCode*)
00005374 PhIEC61850PM_860_68.elf CPhPMBase::RemoveHWConfiguration(trHWFAddress, teHWFErrorCode*)
00005558 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::PrepareForTermination(teHWFErrorCode*)
00005564 PhIEC61850PM_860_68.elf CPhPMBase::PrepareForTermination(teHWFErrorCode*)
00005778 PhIEC61850PM_860_68.elf CPhPMBase::HandleNodeConfigCompleted(CListOfAllocatedItems*)
000059fc PhIEC61850PM_860_68.elf CPhPMBase::GetHWUnitType(trHWFAddress)
00005c6c PhIEC61850PM_860_68.elf CPhPMBase::RegisterHWUnitWithIOC(trHWFAddress, unsigned int)
00006124 PhIEC61850PM_860_68.elf CPhPMBase::SendConfigDataToCIModule(trHWFAddress, ENUM_ELEMENT_TYPE, int)
00006638 PhIEC61850PM_860_68.elf CPhPMBase::TraverseHWTree(trHWFAddress, int, CPhPMBase::tePhPMTraverseTreeMode, unsigned long, unsigned long, bool)
00006b3c PhIEC61850PM_860_68.elf CPhPMBase::SendStartUsingIOConnection(PH_HWFAddress*, int, teHWFErrorCode*)
00006c54 PhIEC61850PM_860_68.elf CPhPMBase::SendStartUsingForAllUnsentIOConnections(int)
00006da8 PhIEC61850PM_860_68.elf CPhPMBase::SendStartIOConnectionForAllIOConnections(int)
00006e9c PhIEC61850PM_860_68.elf CListOfAllocatedItems::PutArray(unsigned char*, unsigned long)
00006f80 PhIEC61850PM_860_68.elf CListOfAllocatedItems::Add(PH_HWFAddress*, unsigned long, unsigned long, AI_STATUS, ENUM_ELEMENT_TYPE)
00007094 PhIEC61850PM_860_68.elf CPhPMBase::SendIoConnectionAddressList(int)
0000737c PhIEC61850PM_860_68.elf CPhPMBase::WaitForAllIOConnectionsToStart(teHWFErrorCode*)
00007428 PhIEC61850PM_860_68.elf CPhPMBase::WaitForReplyFromCI(int, unsigned long)
00007564 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::PerformFailover(trHWFAddress, teHWFErrorCode*)
0000756c PhIEC61850PM_860_68.elf CPhPMBase::PerformFailover(trHWFAddress, teHWFErrorCode*)
000075e8 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::PerformSwitchover(trHWFAddress, teHWFErrorCode*)
000075f4 PhIEC61850PM_860_68.elf CPhPMBase::PerformSwitchover(trHWFAddress, teHWFErrorCode*)
00007744 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::GetStatus(trHWFAddress, teHWFUnitKind, unsigned long*, unsigned long*, teHWFErrorCode*)
0000774c PhIEC61850PM_860_68.elf CPhPMBase::GetStatus(trHWFAddress, teHWFUnitKind, unsigned long*, unsigned long*, teHWFErrorCode*)
00007834 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::KickWatchdog(unsigned short*, teHWFErrorCode*)
0000783c PhIEC61850PM_860_68.elf CPhPMBase::KickWatchdog(unsigned short*, teHWFErrorCode*)
000078e4 PhIEC61850PM_860_68.elf CPhPMBase::ConfigureWatchdog(trHWFAddress, int)
00007aac PhIEC61850PM_860_68.elf CPhPMBase::HandlePMCommand(int, teHWFErrorCode*)
00007c10 PhIEC61850PM_860_68.elf CPhPMBase::CheckSystemVariables()
00007e54 PhIEC61850PM_860_68.elf CPhPMBase::SupervisionThread()
0000858c PhIEC61850PM_860_68.elf spawnSupervisionThread(int, int, int, int)
00008598 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::StartUsingIoConnection(trHWFAddress, unsigned long, teHWFErrorCode*)
000085a4 PhIEC61850PM_860_68.elf CPhPMBase::StartUsingIoConnection(trHWFAddress, unsigned long, teHWFErrorCode*)
000087ec PhIEC61850PM_860_68.elf CPhPMBase::CheckCompatibility(trHWFAddress const*, tFirmwareInfo, unsigned long*, unsigned long*)
00008878 PhIEC61850PM_860_68.elf CPhPMBase::CheckRedundancyState(trHWFAddress, teHWFErrorCode*)
00008ab0 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::PhResponsibilityForRestart(trHWFAddress, teHWFErrorCode*)
00008abc PhIEC61850PM_860_68.elf CPhPMBase::PhResponsibilityForRestart(trHWFAddress, teHWFErrorCode*)
00008c90 PhIEC61850PM_860_68.elf CPhPMBase::HasSupportForConfRedMode(int)
00008dfc PhIEC61850PM_860_68.elf CPhPMBase::SendConfRedMode(int)
00008f78 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::PhResponsibilityForBackupDevice(trHWFAddress, teHWFErrorCode*)
00008f84 PhIEC61850PM_860_68.elf CPhPMBase::PhResponsibilityForBackupDevice(trHWFAddress, teHWFErrorCode*)
00009480 PhIEC61850PM_860_68.elf CPhPMBase::CommonPhResponsibility(trHWFAddress, teHWFErrorCode*)
00009a58 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::PhResponsibilityForHotInsert(trHWFAddress, teHWFErrorCode*)
00009a64 PhIEC61850PM_860_68.elf CPhPMBase::PhResponsibilityForHotInsert(trHWFAddress, teHWFErrorCode*)
00009eac PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::PhResponsibility(trHWFAddress, teHWFErrorCode*)
00009eb8 PhIEC61850PM_860_68.elf CPhPMBase::PhResponsibility(trHWFAddress, teHWFErrorCode*)
0000a3cc PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::RemoveIoConnection(unsigned long, teHWFErrorCode*)
0000a3d8 PhIEC61850PM_860_68.elf CPhPMBase::RemoveIoConnection(unsigned long, teHWFErrorCode*)
0000a564 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::ReleaseDPM(eAreaType, trHWFAddress, IOAccessErrorCode*)
0000a56c PhIEC61850PM_860_68.elf CPhPMBase::ReleaseDPM(eAreaType, trHWFAddress, IOAccessErrorCode*)
0000a5e4 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::ObtainDPM(eAreaType, trHWFAddress, IOAccessErrorCode*)
0000a5ec PhIEC61850PM_860_68.elf CPhPMBase::ObtainDPM(eAreaType, trHWFAddress, IOAccessErrorCode*)
0000a668 PhIEC61850PM_860_68.elf CPhPMBase::SetCommonCallbackInterface(ICommonCallback*)
0000a898 PhIEC61850PM_860_68.elf CPhPMBase::CPhPMBase()
0000aa04 PhIEC61850PM_860_68.elf CPhPMBase::CPhPMBase()
0000ab70 PhIEC61850PM_860_68.elf CPhPMBase::~CPhPMBase()
0000acd8 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::~CPhPMBase()
0000ace0 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::~CPhPMBase()
0000ace8 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::~CPhPMBase()
0000acf0 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::~CPhPMBase()
0000acfc PhIEC61850PM_860_68.elf CPhPMBase::~CPhPMBase()
0000ae6c PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::~CPhPMBase()
0000ae74 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::~CPhPMBase()
0000ae7c PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::~CPhPMBase()
0000ae84 PhIEC61850PM_860_68.elf non-virtual thunk to CPhPMBase::~CPhPMBase()
0000ae90 PhIEC61850PM_860_68.elf CPhPMBase::~CPhPMBase()
0000aff8 PhIEC61850PM_860_68.elf CListOfRegistrationInfo::CListOfRegistrationInfo(CPMLogger*)
0000b024 PhIEC61850PM_860_68.elf CListOfRegistrationInfo::CListOfRegistrationInfo(CPMLogger*)
0000b050 PhIEC61850PM_860_68.elf CListOfRegistrationInfo::Init(IHeapCallback*, int)
0000b078 PhIEC61850PM_860_68.elf CListOfRegistrationInfo::CompareRegistrationInfo(void const*, void const*)
0000b110 PhIEC61850PM_860_68.elf CListOfRegistrationInfo::Find(unsigned long)
0000b178 PhIEC61850PM_860_68.elf CListOfRegistrationInfo::Item(unsigned long)
0000b1c8 PhIEC61850PM_860_68.elf CListOfRegistrationInfo::~CListOfRegistrationInfo()
0000b2dc PhIEC61850PM_860_68.elf CListOfRegistrationInfo::~CListOfRegistrationInfo()
0000b3f0 PhIEC61850PM_860_68.elf CListOfRegistrationInfo::AllIOConnectionStarted()
0000b494 PhIEC61850PM_860_68.elf CListOfRegistrationInfo::ClearSentFlag()
0000b518 PhIEC61850PM_860_68.elf CListOfRegistrationInfo::CreateDummyArea(registrationinfo*, DUMMY_KIND)
0000b5e4 PhIEC61850PM_860_68.elf CListOfRegistrationInfo::PutArray(unsigned char*, unsigned long)
0000b714 PhIEC61850PM_860_68.elf CListOfRegistrationInfo::Add(PH_HWFAddress, unsigned long)
0000b8c0 PhIEC61850PM_860_68.elf CListOfRegistrationInfo::Add(trHWFAddress, unsigned long)
0000b930 PhIEC61850PM_860_68.elf CListOfRegistrationInfo::Find(trHWFAddress)
0000b9d4 PhIEC61850PM_860_68.elf CListOfRegistrationInfo::Find(PH_HWFAddress)
0000ba74 PhIEC61850PM_860_68.elf CListOfRegistrationInfo::Remove(PH_HWFAddress)
0000bb94 PhIEC61850PM_860_68.elf CDriverHandler::ReadyForUse()
0000bba4 PhIEC61850PM_860_68.elf CDriverHandler::CreateTransactionIdAndEvent(ICIGDriverCallback*, unsigned long*, unsigned long*)
0000bcf4 PhIEC61850PM_860_68.elf CDriverHandler::GetDriverInfoPtr(dhdriverinfo**, dhdriverinfo**)
0000bd4c PhIEC61850PM_860_68.elf CDriverHandler::GetDriverInfoForCI(int, dhdriverinfo*&)
0000be60 PhIEC61850PM_860_68.elf CDriverHandler::EnableTimeSync(int, eErrorCodes*)
0000c018 PhIEC61850PM_860_68.elf CDriverHandler::SetPrimary(int)
0000c084 PhIEC61850PM_860_68.elf CDriverHandler::IsRedundant()
0000c0a0 PhIEC61850PM_860_68.elf CDriverHandler::HasGotBusError(int)
0000c0f0 PhIEC61850PM_860_68.elf CDriverHandler::ModuleAvailable(int, bool)
0000c2dc PhIEC61850PM_860_68.elf CDriverHandler::HasGotConfigReply(int)
0000c328 PhIEC61850PM_860_68.elf CDriverHandler::SetConfigReply(int, bool)
0000c364 PhIEC61850PM_860_68.elf CDriverHandler::GetStatusIntSempahore(int)
0000c3dc PhIEC61850PM_860_68.elf CDriverHandler::PutStatusIntSempahore(int)
0000c424 PhIEC61850PM_860_68.elf CDriverHandler::GetPrimaryCIPos()
0000c440 PhIEC61850PM_860_68.elf CDriverHandler::GetBackupCIPos()
0000c45c PhIEC61850PM_860_68.elf CDriverHandler::GetRWMStartAddress(int)
0000c4a0 PhIEC61850PM_860_68.elf CDriverHandler::AtLeastOneDriverIsOpen()
0000c510 PhIEC61850PM_860_68.elf CDriverHandler::ObtainDPM(unsigned long)
0000c648 PhIEC61850PM_860_68.elf CDriverHandler::ReleaseDPM(unsigned long)
0000c780 PhIEC61850PM_860_68.elf CDriverHandler::DriverIsOpen(int)
0000c798 PhIEC61850PM_860_68.elf CDriverHandler::GetBackupAck()
0000c7a8 PhIEC61850PM_860_68.elf CDriverHandler::GetPrimaryAck()
0000c7b8 PhIEC61850PM_860_68.elf CDriverHandler::SetBackupAck()
0000c7cc PhIEC61850PM_860_68.elf CDriverHandler::SetPrimaryAck()
0000c7e0 PhIEC61850PM_860_68.elf CDriverHandler::SetRWError(int)
0000c828 PhIEC61850PM_860_68.elf CDriverHandler::TakeAllChannelSem(dhdriverinfo*)
0000c8f0 PhIEC61850PM_860_68.elf CDriverHandler::GiveAllChannelSem(dhdriverinfo*)
0000c990 PhIEC61850PM_860_68.elf CDriverHandler::PrintStatusRegisters(dhdriverinfo*, int)
0000cac0 PhIEC61850PM_860_68.elf CDriverHandler::CurrentMessageInit(rCurrentMessage*)
0000cb64 PhIEC61850PM_860_68.elf CDriverHandler::Exit()
0000cd28 PhIEC61850PM_860_68.elf CDriverHandler::~CDriverHandler()
0000cd34 PhIEC61850PM_860_68.elf CDriverHandler::~CDriverHandler()
0000cd40 PhIEC61850PM_860_68.elf CDriverHandler::Init(trHWFAddress const*, IDriverFactoryCallback*, IVOSCallback2*, IStatusCallback1*, IHeapCallback*, int, int, int, int, unsigned long, unsigned long, teHWFErrorCode*)
0000d070 PhIEC61850PM_860_68.elf CDriverHandler::RaiseBecomePrimaryInterrupt(int)
0000d20c PhIEC61850PM_860_68.elf CDriverHandler::EnableFFH(dhdriverinfo*)
0000d300 PhIEC61850PM_860_68.elf CDriverHandler::KickWatchDog(unsigned short*, teHWFErrorCode*)
0000d910 PhIEC61850PM_860_68.elf CDriverHandler::GetSwitchoverInfo(int, eErrorCodes*, unsigned long*, eErrorCodes*, unsigned long*)
0000dbe0 PhIEC61850PM_860_68.elf CDriverHandler::WaitForStatusInt(int, bool, unsigned long, eErrorCodes*)
0000dd90 PhIEC61850PM_860_68.elf CDriverHandler::GetFirmwareInfo(int, tFirmwareInfo*, int, eErrorCodes*)
0000e004 PhIEC61850PM_860_68.elf CDriverHandler::ResetCIModule(int, eErrorCodes*)
0000e1b0 PhIEC61850PM_860_68.elf CDriverHandler::SwitchOver(int*)
0000e29c PhIEC61850PM_860_68.elf CDriverHandler::GetStatusRegisters(dhdriverinfo*, unsigned long*)
0000e568 PhIEC61850PM_860_68.elf CDriverHandler::GetStatus(bool, trHWFAddress, teHWFUnitKind, unsigned long*, unsigned long*, teHWFErrorCode*)
0000e834 PhIEC61850PM_860_68.elf CDriverHandler::ReadTransceiver(int, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long*)
0000ebe0 PhIEC61850PM_860_68.elf CDriverHandler::CloseCIGDriver(dhdriverinfo*, bool, eErrorCodes*)
0000f2c4 PhIEC61850PM_860_68.elf CDriverHandler::Close(int, bool)
0000f4a0 PhIEC61850PM_860_68.elf CDriverHandler::CheckCompatibility(trHWFAddress const*, tFirmwareInfo, unsigned long*, unsigned long*)
0000f904 PhIEC61850PM_860_68.elf CDriverHandler::OpenCIGDriver(dhdriverinfo*, bool, bool*, eErrorCodes*)
0000ff1c PhIEC61850PM_860_68.elf CDriverHandler::OpenForHotInsert(int*, bool*, bool*)
00010168 PhIEC61850PM_860_68.elf CDriverHandler::Open(int, bool, int*)
000103c0 PhIEC61850PM_860_68.elf CDriverHandler::UpdateRedundancyInfo(int, int, int, teHWFErrorCode*)
00010698 PhIEC61850PM_860_68.elf CDriverHandler::Write(int, unsigned long, ENUM_TRANSCEIVER_MSG_TYPE, unsigned char*, unsigned long, eErrorCodes*)
00010b5c PhIEC61850PM_860_68.elf CDriverHandler::SendBackupToCI(int, int)
00010c00 PhIEC61850PM_860_68.elf CDriverHandler::SendPrimaryToCI(int, int)
00010ca8 PhIEC61850PM_860_68.elf CDriverHandler::SendOLUStateToCI(int, ENUM_OLU_STATE)
00010db0 PhIEC61850PM_860_68.elf CDriverHandler::SendWatchdogStateToCI(int, WD_STATE, teHWFErrorCode*)
00010ef4 PhIEC61850PM_860_68.elf CDriverHandler::CDriverHandler(CPMLogger*)
00011178 PhIEC61850PM_860_68.elf CDriverHandler::CDriverHandler(CPMLogger*)
00011400 PhIEC61850PM_860_68.elf CDriverHandler::ReadExtTransceiver(int, unsigned long, ENUM_TRANSCEIVER_MSG_TYPE*, unsigned char**, unsigned long*, unsigned long, eErrorCodes*)
00011a9c PhIEC61850PM_860_68.elf CDriverHandler::Read(int, unsigned long, ENUM_TRANSCEIVER_MSG_TYPE*, unsigned char**, unsigned long*, unsigned long, eErrorCodes*)
00011abc PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::AddRef()
00011ac4 PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::AddRef()
00011acc PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::AddRef()
00011ad4 PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::AddRef()
00011adc PhIEC61850PM_860_68.elf CPhIEC61850PM::AddRef()
00011af8 PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::Release()
00011b00 PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::Release()
00011b08 PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::Release()
00011b10 PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::Release()
00011b18 PhIEC61850PM_860_68.elf CPhIEC61850PM::Release()
00011b84 PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::QueryInterface(_GUID const&, void**)
00011b8c PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::QueryInterface(_GUID const&, void**)
00011b94 PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::QueryInterface(_GUID const&, void**)
00011b9c PhIEC61850PM_860_68.elf non-virtual thunk to CPhIEC61850PM::QueryInterface(_GUID const&, void**)
00011ba8 PhIEC61850PM_860_68.elf CPhIEC61850PM::QueryInterface(_GUID const&, void**)
00011cb4 PhIEC61850PM_860_68.elf IUnknown::IUnknown()
00011d0c PhIEC61850PM_860_68.elf IPhCommon::IPhCommon()
00011d70 PhIEC61850PM_860_68.elf IUnknown::~IUnknown()
00011de0 PhIEC61850PM_860_68.elf IPhConfig1::~IPhConfig1()
00011e5c PhIEC61850PM_860_68.elf CPhConfig_Base1::~CPhConfig_Base1()
00011ed8 PhIEC61850PM_860_68.elf IPhConfig1::~IPhConfig1()
00011f54 PhIEC61850PM_860_68.elf IPhConfig1::~IPhConfig1()
00011fd0 PhIEC61850PM_860_68.elf IUnknown::~IUnknown()
00012040 PhIEC61850PM_860_68.elf IUnknown::~IUnknown()
000120b0 PhIEC61850PM_860_68.elf CPhConfig_Base1::~CPhConfig_Base1()
0001212c PhIEC61850PM_860_68.elf IPhClient::~IPhClient()
000121a8 PhIEC61850PM_860_68.elf CPhClient_Base::~CPhClient_Base()
00012224 PhIEC61850PM_860_68.elf IPhClient::~IPhClient()
000122a0 PhIEC61850PM_860_68.elf IPhClient::~IPhClient()
0001231c PhIEC61850PM_860_68.elf CPhClient_Base::~CPhClient_Base()
00012398 PhIEC61850PM_860_68.elf IPhClient1::~IPhClient1()
00012414 PhIEC61850PM_860_68.elf CPhClient_Base1::~CPhClient_Base1()
00012490 PhIEC61850PM_860_68.elf IPhClient1::~IPhClient1()
0001250c PhIEC61850PM_860_68.elf IPhClient1::~IPhClient1()
00012588 PhIEC61850PM_860_68.elf CPhClient_Base1::~CPhClient_Base1()
00012604 PhIEC61850PM_860_68.elf IPhStatus1::~IPhStatus1()
00012680 PhIEC61850PM_860_68.elf CPhStatus_Base1::~CPhStatus_Base1()
000126fc PhIEC61850PM_860_68.elf IPhStatus1::~IPhStatus1()
00012778 PhIEC61850PM_860_68.elf IPhStatus1::~IPhStatus1()
000127f4 PhIEC61850PM_860_68.elf CPhStatus_Base1::~CPhStatus_Base1()
00012870 PhIEC61850PM_860_68.elf IPhIOAccess::~IPhIOAccess()
000128ec PhIEC61850PM_860_68.elf CPhIOAccess_Base::~CPhIOAccess_Base()
00012968 PhIEC61850PM_860_68.elf IPhIOAccess::~IPhIOAccess()
000129e4 PhIEC61850PM_860_68.elf IPhIOAccess::~IPhIOAccess()
00012a60 PhIEC61850PM_860_68.elf CPhIOAccess_Base::~CPhIOAccess_Base()
00012adc PhIEC61850PM_860_68.elf IPhDiagnostics::~IPhDiagnostics()
00012b58 PhIEC61850PM_860_68.elf CPhDiagnostics_Base::~CPhDiagnostics_Base()
00012bd4 PhIEC61850PM_860_68.elf IPhDiagnostics::~IPhDiagnostics()
00012c50 PhIEC61850PM_860_68.elf IPhDiagnostics::~IPhDiagnostics()
00012ccc PhIEC61850PM_860_68.elf CPhDiagnostics_Base::~CPhDiagnostics_Base()
00012d48 PhIEC61850PM_860_68.elf IPhOLU::~IPhOLU()
00012dc4 PhIEC61850PM_860_68.elf CPhOLU_Base::~CPhOLU_Base()
00012e40 PhIEC61850PM_860_68.elf IPhOLU::~IPhOLU()
00012ebc PhIEC61850PM_860_68.elf IPhOLU::~IPhOLU()
00012f38 PhIEC61850PM_860_68.elf CPhOLU_Base::~CPhOLU_Base()
00012fb4 PhIEC61850PM_860_68.elf IPhOLU1::~IPhOLU1()
00013030 PhIEC61850PM_860_68.elf CPhOLU_Base1::~CPhOLU_Base1()
000130ac PhIEC61850PM_860_68.elf IPhOLU1::~IPhOLU1()
00013128 PhIEC61850PM_860_68.elf IPhOLU1::~IPhOLU1()
000131a4 PhIEC61850PM_860_68.elf CPhOLU_Base1::~CPhOLU_Base1()
00013220 PhIEC61850PM_860_68.elf IPhCommon::~IPhCommon()
0001329c PhIEC61850PM_860_68.elf IPhCommon::~IPhCommon()
00013318 PhIEC61850PM_860_68.elf IPhCommon::~IPhCommon()
000133e8 PhIEC61850PM_860_68.elf CompanyName
000133ec PhIEC61850PM_860_68.elf ProductName
000133fc PhIEC61850PM_860_68.elf ProductVersion
00013470 PhIEC61850PM_860_68.elf IID_IPhCommonCB
00013480 PhIEC61850PM_860_68.elf IID_IPhConfigCB
00013490 PhIEC61850PM_860_68.elf IID_IPhConfigCB1
000134a0 PhIEC61850PM_860_68.elf IID_IPhIOAccessCB
000134b0 PhIEC61850PM_860_68.elf IID_IPhExternalConfigCB1
000134c0 PhIEC61850PM_860_68.elf IID_IPhExternalConfigCB2
000134d0 PhIEC61850PM_860_68.elf IID_IPhExternalConfigCB3
000134e0 PhIEC61850PM_860_68.elf IID_IPhOLUCB
000134f0 PhIEC61850PM_860_68.elf IID_IPhCommon
00013500 PhIEC61850PM_860_68.elf IID_IPhConfig1
00013510 PhIEC61850PM_860_68.elf IID_IPhStatus1
00013520 PhIEC61850PM_860_68.elf IID_IPhClient
00013530 PhIEC61850PM_860_68.elf IID_IPhClient1
00013540 PhIEC61850PM_860_68.elf IID_IPhDiagnostics
00013550 PhIEC61850PM_860_68.elf IID_IPhIOAccess
00013560 PhIEC61850PM_860_68.elf IID_IPhSafeConfig
00013570 PhIEC61850PM_860_68.elf IID_IPhSafeConfig1
00013580 PhIEC61850PM_860_68.elf IID_IPhSafeConfig2
00013590 PhIEC61850PM_860_68.elf IID_IPhSimulation
000135a0 PhIEC61850PM_860_68.elf IID_IPhOLU
000135b0 PhIEC61850PM_860_68.elf IID_IPhOLU1
000135c0 PhIEC61850PM_860_68.elf IID_IHeapCallback
000135d0 PhIEC61850PM_860_68.elf IID_ISystemUtilitiesCallback
000135e0 PhIEC61850PM_860_68.elf IID_ISystemUtilitiesCallback1
000135f0 PhIEC61850PM_860_68.elf IID_ISystemUtilitiesCallback2
00013600 PhIEC61850PM_860_68.elf IID_ISystemUtilitiesCallback3
00013610 PhIEC61850PM_860_68.elf IID_ISystemUtilitiesCallback4
00013620 PhIEC61850PM_860_68.elf IID_IEventMgrCallback
00013630 PhIEC61850PM_860_68.elf IID_IEventMgrCallback1
00013640 PhIEC61850PM_860_68.elf IID_ISysClockCallback
00013650 PhIEC61850PM_860_68.elf IID_ISysClockCallback1
00013660 PhIEC61850PM_860_68.elf IID_ISysClockCallback2
00013670 PhIEC61850PM_860_68.elf IID_ISysClockCallback3
00013680 PhIEC61850PM_860_68.elf IID_INetwClockSynchCallback
00013690 PhIEC61850PM_860_68.elf IID_IConfigCBCallback1
000136a0 PhIEC61850PM_860_68.elf IID_IConfigCBCallback2
000136b0 PhIEC61850PM_860_68.elf IID_IConfigCBCallback3
000136c0 PhIEC61850PM_860_68.elf IID_IExternalConfigCBCallback
000136d0 PhIEC61850PM_860_68.elf IID_IExternalConfigCBCallback2
000136e0 PhIEC61850PM_860_68.elf IID_IExternalConfigCBCallback3
000136f0 PhIEC61850PM_860_68.elf IID_IExternalConfigCBCallback4
00013700 PhIEC61850PM_860_68.elf IID_IMessagesCBCallback
00013710 PhIEC61850PM_860_68.elf IID_IAIPAccessCBCallback
00013720 PhIEC61850PM_860_68.elf IID_IOLUCBCallback
00013730 PhIEC61850PM_860_68.elf IID_IOLUCBCallback1
00013740 PhIEC61850PM_860_68.elf IID_ISystemUtilitiesCBCallback1
00013750 PhIEC61850PM_860_68.elf IID_IConfigCallback1
00013760 PhIEC61850PM_860_68.elf IID_IConfigCallback2
00013770 PhIEC61850PM_860_68.elf IID_IStatusCallback1
00013780 PhIEC61850PM_860_68.elf IID_IGenClientCallback
00013790 PhIEC61850PM_860_68.elf IID_IGenClientCallback1
000137a0 PhIEC61850PM_860_68.elf IID_IGenClientCallback2
000137b0 PhIEC61850PM_860_68.elf IID_IIACClientCallback
000137c0 PhIEC61850PM_860_68.elf IID_IDriverFactoryCallback
000137d0 PhIEC61850PM_860_68.elf IID_IDiagnosticsCallback
000137e0 PhIEC61850PM_860_68.elf IID_ISafeConfigCallback
000137f0 PhIEC61850PM_860_68.elf IID_ISafeConfigCallback1
00013800 PhIEC61850PM_860_68.elf IID_ISafeConfigCallback2
00013810 PhIEC61850PM_860_68.elf IID_ICRCCallback
00013820 PhIEC61850PM_860_68.elf IID_IIOAccessCallback
00013830 PhIEC61850PM_860_68.elf IID_CriticalRegionCallback
00013840 PhIEC61850PM_860_68.elf IID_VOSExceptionCallback
00013850 PhIEC61850PM_860_68.elf IID_DrvCommonCallback
00013860 PhIEC61850PM_860_68.elf IID_ProtectedMirroredHeapCallback
00013870 PhIEC61850PM_860_68.elf IID_SharedMirroredHeapCallback
00013880 PhIEC61850PM_860_68.elf IID_TemporaryMirroredHeapCallback
00013890 PhIEC61850PM_860_68.elf IID_IRestrictedVOSCallback
000138a0 PhIEC61850PM_860_68.elf IID_IVarServerCallback
000138b0 PhIEC61850PM_860_68.elf IID_IVarServerCallback1
000138c0 PhIEC61850PM_860_68.elf IID_IVarServerCallback2
000138d0 PhIEC61850PM_860_68.elf IID_ISOCKETCallback
000138e0 PhIEC61850PM_860_68.elf IID_ISOCKETCallback1
000138f0 PhIEC61850PM_860_68.elf IID_IVOSCallback2
00013900 PhIEC61850PM_860_68.elf CPMLogger::m_PhClassLibIdStr
00017110 V vtable for CPhIEC61850PM PhIEC61850PM_860_68.elf 
00017270 V vtable for CPhOLU_Base1 PhIEC61850PM_860_68.elf 
000172b0 V vtable for CPhOLU_Base PhIEC61850PM_860_68.elf 
000172e8 V vtable for CPhDiagnostics_Base PhIEC61850PM_860_68.elf 
00017310 V vtable for CPhIOAccess_Base PhIEC61850PM_860_68.elf 
00017338 V vtable for CPhStatus_Base1 PhIEC61850PM_860_68.elf 
00017360 V vtable for CPhClient_Base1 PhIEC61850PM_860_68.elf 
000173c8 V vtable for CPhClient_Base PhIEC61850PM_860_68.elf 
00017418 V vtable for CPhConfig_Base1 PhIEC61850PM_860_68.elf 
00017460 V vtable for CPhCommon_Base PhIEC61850PM_860_68.elf 
00017488 V vtable for IPhConfig1 PhIEC61850PM_860_68.elf 
000174d0 V vtable for IUnknown PhIEC61850PM_860_68.elf 
000174f0 V vtable for IPhClient PhIEC61850PM_860_68.elf 
00017540 V vtable for IPhClient1 PhIEC61850PM_860_68.elf 
000175a8 V vtable for IPhStatus1 PhIEC61850PM_860_68.elf 
000175d0 V vtable for IPhIOAccess PhIEC61850PM_860_68.elf 
000175f8 V vtable for IPhDiagnostics PhIEC61850PM_860_68.elf 
00017620 V vtable for IPhOLU PhIEC61850PM_860_68.elf 
00017658 V vtable for IPhOLU1 PhIEC61850PM_860_68.elf 
00017698 V vtable for IPhCommon PhIEC61850PM_860_68.elf 
000176c0 V vtable for CPMLogger PhIEC61850PM_860_68.elf 
000176d0 V vtable for CPhPMBase PhIEC61850PM_860_68.elf 
0001782c PhIEC61850PM_860_68.elf CRTFuncTabBegin
0001782c PhIEC61850PM_860_68.elf scprocs
00017838 PhIEC61850PM_860_68.elf printf
0001783c PhIEC61850PM_860_68.elf sprintf
00017840 PhIEC61850PM_860_68.elf sscanf
00017844 PhIEC61850PM_860_68.elf memcpy
00017848 PhIEC61850PM_860_68.elf memset
0001784c PhIEC61850PM_860_68.elf strcat
00017850 PhIEC61850PM_860_68.elf strcmp
00017854 PhIEC61850PM_860_68.elf strlen
00017858 PhIEC61850PM_860_68.elf strncmp
0001785c PhIEC61850PM_860_68.elf strncpy
00017860 PhIEC61850PM_860_68.elf memchr
00017864 PhIEC61850PM_860_68.elf memcmp
00017868 PhIEC61850PM_860_68.elf memmove
0001786c PhIEC61850PM_860_68.elf strchr
00017870 PhIEC61850PM_860_68.elf strcoll
00017874 PhIEC61850PM_860_68.elf strcpy
00017878 PhIEC61850PM_860_68.elf strcspn
0001787c PhIEC61850PM_860_68.elf strncat
00017880 PhIEC61850PM_860_68.elf strpbrk
00017884 PhIEC61850PM_860_68.elf strrchr
00017888 PhIEC61850PM_860_68.elf strspn
0001788c PhIEC61850PM_860_68.elf strstr
00017890 PhIEC61850PM_860_68.elf strtok
00017894 PhIEC61850PM_860_68.elf strxfrm
00017898 PhIEC61850PM_860_68.elf strerror
0001789c PhIEC61850PM_860_68.elf pow
000178a0 PhIEC61850PM_860_68.elf acos
000178a4 PhIEC61850PM_860_68.elf asin
000178a8 PhIEC61850PM_860_68.elf atan
000178ac PhIEC61850PM_860_68.elf atan2
000178b0 PhIEC61850PM_860_68.elf ceil
000178b4 PhIEC61850PM_860_68.elf cos
000178b8 PhIEC61850PM_860_68.elf cosh
000178bc PhIEC61850PM_860_68.elf exp
000178c0 PhIEC61850PM_860_68.elf fabs
000178c4 PhIEC61850PM_860_68.elf floor
000178c8 PhIEC61850PM_860_68.elf fmod
000178cc PhIEC61850PM_860_68.elf frexp
000178d0 PhIEC61850PM_860_68.elf ldexp
000178d4 PhIEC61850PM_860_68.elf log
000178d8 PhIEC61850PM_860_68.elf log10
000178dc PhIEC61850PM_860_68.elf modf
000178e0 PhIEC61850PM_860_68.elf sin
000178e4 PhIEC61850PM_860_68.elf sinh
000178e8 PhIEC61850PM_860_68.elf sqrt
000178ec PhIEC61850PM_860_68.elf tan
000178f0 PhIEC61850PM_860_68.elf tanh
000178f4 PhIEC61850PM_860_68.elf acosf
000178f8 PhIEC61850PM_860_68.elf asinf
000178fc PhIEC61850PM_860_68.elf atanf
00017900 PhIEC61850PM_860_68.elf atan2f
00017904 PhIEC61850PM_860_68.elf ceilf
00017908 PhIEC61850PM_860_68.elf cosf
0001790c PhIEC61850PM_860_68.elf coshf
00017910 PhIEC61850PM_860_68.elf expf
00017914 PhIEC61850PM_860_68.elf fabsf
00017918 PhIEC61850PM_860_68.elf floorf
0001791c PhIEC61850PM_860_68.elf fmodf
00017920 PhIEC61850PM_860_68.elf logf
00017924 PhIEC61850PM_860_68.elf log10f
00017928 PhIEC61850PM_860_68.elf powf
0001792c PhIEC61850PM_860_68.elf sinf
00017930 PhIEC61850PM_860_68.elf sinhf
00017934 PhIEC61850PM_860_68.elf sqrtf
00017938 PhIEC61850PM_860_68.elf tanf
0001793c PhIEC61850PM_860_68.elf tanhf
00017940 PhIEC61850PM_860_68.elf div_r
00017944 PhIEC61850PM_860_68.elf labs
00017948 PhIEC61850PM_860_68.elf strtol
0001794c PhIEC61850PM_860_68.elf free
00017950 PhIEC61850PM_860_68.elf abort
00017954 PhIEC61850PM_860_68.elf abs
00017958 PhIEC61850PM_860_68.elf atof
0001795c PhIEC61850PM_860_68.elf atoi
00017960 PhIEC61850PM_860_68.elf atol
00017964 PhIEC61850PM_860_68.elf bsearch
00017968 PhIEC61850PM_860_68.elf ldiv_r
0001796c PhIEC61850PM_860_68.elf qsort
00017970 PhIEC61850PM_860_68.elf rand
00017974 PhIEC61850PM_860_68.elf srand
00017978 PhIEC61850PM_860_68.elf strtod
0001797c PhIEC61850PM_860_68.elf strtoul
00017980 PhIEC61850PM_860_68.elf malloc
00017984 PhIEC61850PM_860_68.elf __assert
00017988 PhIEC61850PM_860_68.elf time
0001798c PhIEC61850PM_860_68.elf asctime
00017990 PhIEC61850PM_860_68.elf gmtime
00017994 PhIEC61850PM_860_68.elf clock
00017998 PhIEC61850PM_860_68.elf ctime
0001799c PhIEC61850PM_860_68.elf difftime
000179a0 PhIEC61850PM_860_68.elf localtime
000179a4 PhIEC61850PM_860_68.elf mktime
000179a8 PhIEC61850PM_860_68.elf strftime
000179ac PhIEC61850PM_860_68.elf eventcollSem
000179b0 PhIEC61850PM_860_68.elf intLock
000179b4 PhIEC61850PM_860_68.elf intUnlock
000179b8 PhIEC61850PM_860_68.elf _fabs
000179bc PhIEC61850PM_860_68.elf _ddec
000179c0 PhIEC61850PM_860_68.elf _d_mul
000179c4 PhIEC61850PM_860_68.elf __floatsidf
000179c8 PhIEC61850PM_860_68.elf _d_sub
000179cc PhIEC61850PM_860_68.elf _d_add
000179d0 PhIEC61850PM_860_68.elf __fixunsdfsi
000179d4 PhIEC61850PM_860_68.elf __extendsfdf2
000179d8 PhIEC61850PM_860_68.elf __adddf3
000179dc PhIEC61850PM_860_68.elf _dinc
000179e0 PhIEC61850PM_860_68.elf __fixdfsi
000179e4 PhIEC61850PM_860_68.elf _d_neg
000179e8 PhIEC61850PM_860_68.elf _d_dtof
000179ec PhIEC61850PM_860_68.elf _f_qtof
000179f0 PhIEC61850PM_860_68.elf _dpfabs
000179f4 PhIEC61850PM_860_68.elf _d_dtoq
000179f8 PhIEC61850PM_860_68.elf _d_div
000179fc PhIEC61850PM_860_68.elf __negdf2
00017a00 PhIEC61850PM_860_68.elf __divdf3
00017a04 PhIEC61850PM_860_68.elf __muldf3
00017a08 PhIEC61850PM_860_68.elf _d_dtoi
00017a0c PhIEC61850PM_860_68.elf _f_ftoq
00017a10 PhIEC61850PM_860_68.elf __truncdfsf2
00017a14 PhIEC61850PM_860_68.elf _fp_round
00017a18 PhIEC61850PM_860_68.elf _d_utod
00017a1c PhIEC61850PM_860_68.elf _d_qtod
00017a20 PhIEC61850PM_860_68.elf _d_dtou
00017a24 PhIEC61850PM_860_68.elf _d_itod
00017a28 PhIEC61850PM_860_68.elf __subdf3
00017a2c PhIEC61850PM_860_68.elf _f_ftod
00017a30 PhIEC61850PM_860_68.elf _d_feq
00017a34 PhIEC61850PM_860_68.elf __gtdf2
00017a38 PhIEC61850PM_860_68.elf _d_fne
00017a3c PhIEC61850PM_860_68.elf _d_cmp
00017a40 PhIEC61850PM_860_68.elf _d_flt
00017a44 PhIEC61850PM_860_68.elf _d_cmpe
00017a48 PhIEC61850PM_860_68.elf __nedf2
00017a4c PhIEC61850PM_860_68.elf _d_fgt
00017a50 PhIEC61850PM_860_68.elf _d_fle
00017a54 PhIEC61850PM_860_68.elf _d_fge
00017a58 PhIEC61850PM_860_68.elf _fdec
00017a5c PhIEC61850PM_860_68.elf _f_add
00017a60 PhIEC61850PM_860_68.elf __divsf3
00017a64 PhIEC61850PM_860_68.elf __fixsfsi
00017a68 PhIEC61850PM_860_68.elf __subsf3
00017a6c PhIEC61850PM_860_68.elf _finc
00017a70 PhIEC61850PM_860_68.elf _f_neg
00017a74 PhIEC61850PM_860_68.elf _f_sub
00017a78 PhIEC61850PM_860_68.elf _f_itof
00017a7c PhIEC61850PM_860_68.elf _fabsf
00017a80 PhIEC61850PM_860_68.elf _f_utof
00017a84 PhIEC61850PM_860_68.elf _fpfabs
00017a88 PhIEC61850PM_860_68.elf __floatsisf
00017a8c PhIEC61850PM_860_68.elf _f_div
00017a90 PhIEC61850PM_860_68.elf __negsf2
00017a94 PhIEC61850PM_860_68.elf __mulsf3
00017a98 PhIEC61850PM_860_68.elf _f_ftoi
00017a9c PhIEC61850PM_860_68.elf _f_mul
00017aa0 PhIEC61850PM_860_68.elf __fixunssfsi
00017aa4 PhIEC61850PM_860_68.elf _f_ftou
00017aa8 PhIEC61850PM_860_68.elf __addsf3
00017aac PhIEC61850PM_860_68.elf _f_feq
00017ab0 PhIEC61850PM_860_68.elf _f_flt
00017ab4 PhIEC61850PM_860_68.elf _f_fle
00017ab8 PhIEC61850PM_860_68.elf __nesf2
00017abc PhIEC61850PM_860_68.elf __gtsf2
00017ac0 PhIEC61850PM_860_68.elf _f_fge
00017ac4 PhIEC61850PM_860_68.elf _f_fgt
00017ac8 PhIEC61850PM_860_68.elf _f_fne
00017acc PhIEC61850PM_860_68.elf _f_cmp
00017ad0 PhIEC61850PM_860_68.elf _f_cmpe
00017ad4 PhIEC61850PM_860_68.elf ldexpf
00017ad8 PhIEC61850PM_860_68.elf modff
00017adc PhIEC61850PM_860_68.elf frexpf
00017ae0 PhIEC61850PM_860_68.elf exadd
00017ae4 PhIEC61850PM_860_68.elf exmul
00017ae8 PhIEC61850PM_860_68.elf sigmax
00017aec PhIEC61850PM_860_68.elf exdiv
00017af0 PhIEC61850PM_860_68.elf exsub
00017af4 PhIEC61850PM_860_68.elf __eqdf2
00017af8 PhIEC61850PM_860_68.elf __ltdf2
00017afc PhIEC61850PM_860_68.elf __lesf2
00017b00 PhIEC61850PM_860_68.elf __ledf2
00017b04 PhIEC61850PM_860_68.elf __eqsf2
00017b08 PhIEC61850PM_860_68.elf __ltsf2
00017b0c PhIEC61850PM_860_68.elf __gesf2
00017b10 PhIEC61850PM_860_68.elf __gedf2
00017b1c PhIEC61850PM_860_68.elf fprintf
00017b20 PhIEC61850PM_860_68.elf __stdout
00017b24 PhIEC61850PM_860_68.elf __stderr
00017b28 PhIEC61850PM_860_68.elf setjmp
00017b2c PhIEC61850PM_860_68.elf longjmp
00017b30 PhIEC61850PM_860_68.elf operator new[](unsigned int)
00017b34 PhIEC61850PM_860_68.elf operator delete[](void*)
00017b38 PhIEC61850PM_860_68.elf __floatunsisf
00017b3c PhIEC61850PM_860_68.elf __floatunsidf
00017b40 PhIEC61850PM_860_68.elf CRTFuncTabEnd
00017b40 PhIEC61850PM_860_68.elf ecprocs
00017b40 PhIEC61850PM_860_68.elf etext
00017b40 PhIEC61850PM_860_68.elf sgot2
00018140 PhIEC61850PM_860_68.elf egot2
00018140 PhIEC61850PM_860_68.elf sfixup
00018850 PhIEC61850PM_860_68.elf CMirroredObject::c_pMirroredObjectMgrImpl
00018850 PhIEC61850PM_860_68.elf efixup
00018854 PhIEC61850PM_860_68.elf CMirroredObjectAgent::c_pHeapCallback
00018858 PhIEC61850PM_860_68.elf CMirroredObjectAgent::c_AgentTag
0001885c V CComCoClass<CPhIEC61850PM, &(CLSID_CPhIEC61850PM)>::m_HeapTag PhIEC61850PM_860_68.elf 
00018860 PhIEC61850PM_860_68.elf PHproperties
00018868 PhIEC61850PM_860_68.elf pcAeString
0001887c PhIEC61850PM_860_68.elf pcAeSignalID
00018890 PhIEC61850PM_860_68.elf useEXEHEAD
</SYMBOLS>
