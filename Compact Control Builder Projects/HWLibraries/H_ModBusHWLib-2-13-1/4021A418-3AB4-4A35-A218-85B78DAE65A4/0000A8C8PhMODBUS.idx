<HEAD>
Index of symbols created Fri 09/20/2013 14:17:31.01 
</HEAD>
<SECTIONS=10>
00010000 0001942c .text
0001942c 00019940 .got2
00019940 00019cc0 .fixup
00019cc0 00019ce8 .bss
00019ce8 0001dda8 .data
0001dda8 0001dda8 .sdata
0001dda8 00030150 .stab
00030150 0001942c .comment
0001942c 00030490 .sdata2
00030490 00030490 .stabstr
</SECTIONS>
<SYMBOLS=555>
00000000 PhMODBUS.elf EXE_HEAD
00000064 PhMODBUS.elf CPhMODBUS::CPhMODBUS(void)
000001b0 PhMODBUS.elf CPhMODBUS::~CPhMODBUS(void)
000002a0 PhMODBUS.elf vosThread(int, int, int, int)
000002f8 PhMODBUS.elf CPhMODBUS::GetProductInfo(unsigned char *, unsigned char *, unsigned char *, unsigned long)
00000390 PhMODBUS.elf CPhMODBUS::SetCommonCallbackInterface(ICommonCallback *)
000006e8 PhMODBUS.elf CPhMODBUS::StartThread(void)
000007a0 PhMODBUS.elf CPhMODBUS::Deletethread(void)
000008c4 PhMODBUS.elf CPhMODBUS::createSemaphore(void)
00000a0c PhMODBUS.elf CPhMODBUS::deleteSemaphore(void)
00000b38 PhMODBUS.elf CModbusMessage::CModbusMessage(void)
00000bd4 PhMODBUS.elf CModbusMessage::~CModbusMessage(void)
00000c28 PhMODBUS.elf CModbusMessage::operator new(unsigned int, IHeapCallback *)
00000d04 PhMODBUS.elf CPhMODBUS::DelModbusMessage(void *, IHeapCallback *)
00000d8c PhMODBUS.elf CPhMODBUS::operator new(unsigned int, IHeapCallback *)
00000e40 PhMODBUS.elf CPhMODBUS::heap_delete(void)
00000eac PhMODBUS.elf CPhMODBUS::QueryInterface(_GUID const &, void **)
00000fec PhMODBUS.elf CPhMODBUS::AddRef(void)
00001004 PhMODBUS.elf CPhMODBUS::Release(void)
00001080 PhMODBUS.elf Letext
00001084 PhMODBUS.elf CPhMODBUS::ConnectReq(unsigned long, unsigned long *, int *)
0000146c PhMODBUS.elf CPhMODBUS::DisconnectReq(unsigned long, unsigned long, int *)
00001984 PhMODBUS.elf CPhMODBUS::ReadVarReq(unsigned long, int *)
00001e88 PhMODBUS.elf CPhMODBUS::WriteVarReq(unsigned long, int *)
00002418 PhMODBUS.elf CPhMODBUS::ReadRawReq(unsigned long, int *)
00002468 PhMODBUS.elf CPhMODBUS::WriteRawReq(unsigned long, int *)
000024b8 PhMODBUS.elf CPhMODBUS::AbortRawReq(unsigned long, int *)
00002508 PhMODBUS.elf CPhMODBUS::TimeoutAbortVarReq(unsigned long, int *)
000025a4 PhMODBUS.elf CPhMODBUS::AbortVarReq(unsigned long, int *)
0000286c PhMODBUS.elf CPhMODBUS::GetExtendedStatusSize(unsigned long, int *, int *)
000028bc PhMODBUS.elf CPhMODBUS::GetExtendedStatus(unsigned long, int, teIEC1131Type *, tGCValue *, int *)
0000290c PhMODBUS.elf CPhMODBUS::SetStatus(unsigned long, int, int *)
0000295c PhMODBUS.elf CPhMODBUS::ReadRes(unsigned long, int, int *)
000029c0 PhMODBUS.elf CPhMODBUS::WriteRes(unsigned long, int, int *)
00002a0c PhMODBUS.elf Letext
00002a10 PhMODBUS.elf CPhMODBUS::PrepareForTermination(teHWFErrorCode *)
00002c20 PhMODBUS.elf CPhMODBUS::PerformSwitchover(trHWFAddress, teHWFErrorCode *)
00002c70 PhMODBUS.elf CPhMODBUS::PerformFailover(trHWFAddress, teHWFErrorCode *)
00002cc0 PhMODBUS.elf CPhMODBUS::StartUsingDevice(trHWFAddress, teHWFErrorCode *)
00002d10 PhMODBUS.elf CPhMODBUS::RemoveHWConfiguration(trHWFAddress, teHWFErrorCode *)
00002e20 PhMODBUS.elf CPhMODBUS::RemoveIoConnection(unsigned long, teHWFErrorCode *)
00002e70 PhMODBUS.elf CPhMODBUS::PhResponsibilityForRestart(trHWFAddress, teHWFErrorCode *)
00002f2c PhMODBUS.elf CPhMODBUS::PhResponsibility(trHWFAddress, teHWFErrorCode *)
00003420 PhMODBUS.elf CPhMODBUS::PhResponsibilityForBackupDevice(trHWFAddress, teHWFErrorCode *)
00003470 PhMODBUS.elf CPhMODBUS::PhResponsibilityForHotInsert(trHWFAddress, teHWFErrorCode *)
000038f4 PhMODBUS.elf CPhMODBUS::StartUsingIoConnection(trHWFAddress, unsigned long, teHWFErrorCode *)
00003940 PhMODBUS.elf Letext
00003940 PhMODBUS.elf cConnList::cConnList(void)
000039a8 PhMODBUS.elf cConnList::~cConnList(void)
00003a7c PhMODBUS.elf cConnList::ConnListInitialize(unsigned long, IVOSCallback *, IGenClientCallback *, IHeapCallback *)
00003ba8 PhMODBUS.elf cConnList::Free_Node(unsigned long, IHeapCallback *)
00003e24 PhMODBUS.elf cConnList::Insert_Node(unsigned long, IHeapCallback *, int *)
0000410c PhMODBUS.elf cConnList::ResetTime_Node(unsigned long)
000042f0 PhMODBUS.elf cConnList::SetConnectionStatusForAll(int)
000044ac PhMODBUS.elf cConnList::DeleteAllConnections(IHeapCallback *)
00004668 PhMODBUS.elf Letext
0000466c PhMODBUS.elf CPhMODBUS::WriteFITCRC(CModbusMessage *)
00004718 PhMODBUS.elf CPhMODBUS::ModifyTxBuffer(int, CModbusMessage *)
00004740 PhMODBUS.elf CPhMODBUS::ModifyRxBuffer(int, CModbusMessage *)
00004988 PhMODBUS.elf Letext
0000498c PhMODBUS.elf CPhMODBUS::KickWatchdog(unsigned short *, teHWFErrorCode *)
00004ac0 PhMODBUS.elf CPhMODBUS::GetStatus(trHWFAddress, teHWFUnitKind, teHWFStatusType *, teHWFExtStatusType *, teHWFErrorCode *)
00004b0c PhMODBUS.elf Letext
00004b10 PhMODBUS.elf CModbusMessage::WriteCRC16(void)
00004bc0 PhMODBUS.elf CModbusMessage::CheckCRC16(void)
00004c90 PhMODBUS.elf CModbusMessage::IsValid(void)
00004cb4 PhMODBUS.elf CPhMODBUS::ThreadWork(void)
000050e8 PhMODBUS.elf CPhMODBUS::PollAllConnections(CModbusMessage *)
000054ec PhMODBUS.elf CPhMODBUS::ProcessVarData(unsigned long, unsigned long, bool, int *, CModbusMessage *)
0000595c PhMODBUS.elf CPhMODBUS::ModbusReceiveTelegram(int *, CModbusMessage *)
00005c40 PhMODBUS.elf CPhMODBUS::ModbusBuildTelegram(unsigned long, unsigned long, int *, CModbusMessage *)
0000668c PhMODBUS.elf CPhMODBUS::ModbusBuildPollTelegram(unsigned long, int *, CModbusMessage *)
0000687c PhMODBUS.elf CPhMODBUS::ModbusSendTelegram(int *, CModbusMessage *)
000069dc PhMODBUS.elf CPhMODBUS::UnpackTelegram(unsigned long, unsigned long, bool, int *, CModbusMessage *)
000071b8 PhMODBUS.elf CPhMODBUS::GetMemoryType(unsigned long, int *)
00007458 PhMODBUS.elf CPhMODBUS::GetStartAddress(unsigned long, int *)
00007638 PhMODBUS.elf CModbusMessage::ResetModbusMessage(void)
000076b0 PhMODBUS.elf CModbusMessage::IsResponseAddressValid(void)
000076cc PhMODBUS.elf CPhMODBUS::EmptyVardataQueue(void)
000078d4 PhMODBUS.elf CPhMODBUS::EmptyVarDataForConnection(unsigned long)
00007b5c PhMODBUS.elf cTracelog::Init(ISystemUtilitiesCallback *)
00007b5c PhMODBUS.elf Letext
00007b64 PhMODBUS.elf cTracelog::cTracelog(void)
00007b7c PhMODBUS.elf cTracelog::~cTracelog(void)
00007ba8 PhMODBUS.elf cTracelog::Error(char *, char *, unsigned int)
00007c88 PhMODBUS.elf cTracelog::PrepareMessage(char *, char *, char *, unsigned int)
00007dd8 PhMODBUS.elf cTracelog::Info(char *, char *, unsigned int)
00007eb8 PhMODBUS.elf cTracelog::Trace(int, char *)
00007f98 PhMODBUS.elf cTracelog::Get_Trace_Level(void)
00008054 PhMODBUS.elf cTracelog::ENABLE_MODBUSDEBUG_BOOL(void)
000080d4 PhMODBUS.elf Letext
000080d8 PhMODBUS.elf ObjectFactory
0000821c PhMODBUS.elf Letext
00008220 PhMODBUS.elf __pure_virtual
00008284 PhMODBUS.elf __builtin_delete
000082e4 PhMODBUS.elf Letext
000082e4 PhMODBUS.elf Letext
000082e4 PhMODBUS.elf Letext
000082e8 PhMODBUS.elf CPhCommon_Base::CPhCommon_Base(void)
00008340 G _SDA2_BASE_ PhMODBUS.elf 
00008354 PhMODBUS.elf CPhCommon_Base::~CPhCommon_Base(void)
000083cc PhMODBUS.elf CPhCommon_Base::GetProductInfo(unsigned char *, unsigned char *, unsigned char *, unsigned long)
00008408 PhMODBUS.elf CPhCommon_Base::SetCommonCallbackInterface(ICommonCallback *)
00008438 PhMODBUS.elf CPhConfig_Base1::PrepareForTermination(teHWFErrorCode *)
00008468 PhMODBUS.elf CPhConfig_Base1::RemoveHWConfiguration(trHWFAddress, teHWFErrorCode *)
0000849c PhMODBUS.elf CPhConfig_Base1::RemoveIoConnection(unsigned long, teHWFErrorCode *)
000084d0 PhMODBUS.elf CPhConfig_Base1::PhResponsibilityForRestart(trHWFAddress, teHWFErrorCode *)
00008504 PhMODBUS.elf CPhConfig_Base1::PhResponsibility(trHWFAddress, teHWFErrorCode *)
00008538 PhMODBUS.elf CPhConfig_Base1::StartUsingIoConnection(trHWFAddress, unsigned long, teHWFErrorCode *)
00008570 PhMODBUS.elf CPhConfig_Base1::PhResponsibilityForBackupDevice(trHWFAddress, teHWFErrorCode *)
000085a4 PhMODBUS.elf CPhConfig_Base1::PhResponsibilityForHotInsert(trHWFAddress, teHWFErrorCode *)
000085d8 PhMODBUS.elf CPhConfig_Base1::PerformSwitchover(trHWFAddress, teHWFErrorCode *)
0000860c PhMODBUS.elf CPhConfig_Base1::StartUsingDevice(trHWFAddress, teHWFErrorCode *)
00008640 PhMODBUS.elf CPhConfig_Base1::PerformFailover(trHWFAddress, teHWFErrorCode *)
00008674 PhMODBUS.elf CPhClient_Base::ConnectReq(unsigned long, unsigned long *, int *)
000086ac PhMODBUS.elf CPhClient_Base::DisconnectReq(unsigned long, unsigned long, int *)
000086e4 PhMODBUS.elf CPhClient_Base::ReadVarReq(unsigned long, int *)
00008718 PhMODBUS.elf CPhClient_Base::WriteVarReq(unsigned long, int *)
0000874c PhMODBUS.elf CPhClient_Base::ReadRawReq(unsigned long, int *)
00008780 PhMODBUS.elf CPhClient_Base::WriteRawReq(unsigned long, int *)
000087b4 PhMODBUS.elf CPhClient_Base::AbortRawReq(unsigned long, int *)
000087e8 PhMODBUS.elf CPhClient_Base::AbortVarReq(unsigned long, int *)
0000881c PhMODBUS.elf CPhClient_Base::GetExtendedStatusSize(unsigned long, int *, int *)
00008854 PhMODBUS.elf CPhClient_Base::GetExtendedStatus(unsigned long, int, teIEC1131Type *, tGCValue *, int *)
00008894 PhMODBUS.elf CPhClient_Base::SetStatus(unsigned long, int, int *)
000088cc PhMODBUS.elf CPhClient_Base::ReadRes(unsigned long, int, int *)
00008904 PhMODBUS.elf CPhClient_Base::WriteRes(unsigned long, int, int *)
0000893c PhMODBUS.elf CPhClient_Base1::ConnectReq(unsigned long, unsigned long *, int *)
00008974 PhMODBUS.elf CPhClient_Base1::DisconnectReq(unsigned long, unsigned long, int *)
000089ac PhMODBUS.elf CPhClient_Base1::ReadVarReq(unsigned long, int *)
000089e0 PhMODBUS.elf CPhClient_Base1::WriteVarReq(unsigned long, int *)
00008a14 PhMODBUS.elf CPhClient_Base1::RegisterVarReq(unsigned long, int *)
00008a48 PhMODBUS.elf CPhClient_Base1::ReadRawReq(unsigned long, int *)
00008a7c PhMODBUS.elf CPhClient_Base1::WriteRawReq(unsigned long, int *)
00008ab0 PhMODBUS.elf CPhClient_Base1::AbortRawReq(unsigned long, int *)
00008ae4 PhMODBUS.elf CPhClient_Base1::AbortVarReq(unsigned long, int *)
00008b18 PhMODBUS.elf CPhClient_Base1::TimeoutAbortVarReq(unsigned long, int *)
00008ba8 PhMODBUS.elf CPhClient_Base1::GetExtendedStatusSize(unsigned long, int *, int *)
00008be0 PhMODBUS.elf CPhClient_Base1::GetExtendedStatus(unsigned long, int, teIEC1131Type *, tGCValue *, int *)
00008c20 PhMODBUS.elf CPhClient_Base1::BufferTakeForReceive(unsigned long, int *)
00008c54 PhMODBUS.elf CPhClient_Base1::BufferGiveForReceive(unsigned long, int, int *)
00008c8c PhMODBUS.elf CPhClient_Base1::BufferTakeForSend(unsigned long, unsigned int, int *)
00008cc4 PhMODBUS.elf CPhClient_Base1::BufferGiveForSend(unsigned long, unsigned int, int, int *)
00008d00 PhMODBUS.elf CPhClient_Base1::SetStatus(unsigned long, int, int *)
00008d38 PhMODBUS.elf CPhClient_Base1::ReadRes(unsigned long, int, int *)
00008d70 PhMODBUS.elf CPhClient_Base1::WriteRes(unsigned long, int, int *)
00008da8 PhMODBUS.elf CPhStatus_Base1::KickWatchdog(unsigned short *, teHWFErrorCode *)
00008ddc PhMODBUS.elf CPhStatus_Base1::GetStatus(trHWFAddress, teHWFUnitKind, unsigned long *, unsigned long *, teHWFErrorCode *)
00008e1c PhMODBUS.elf CPhIOAccess_Base::GetCopyRoutineReference(unsigned int, void (**)(short, void *, void *), IOAccessErrorCode *)
00008e54 PhMODBUS.elf CPhIOAccess_Base::ObtainDPM(eAreaType, trHWFAddress, IOAccessErrorCode *)
00008e8c PhMODBUS.elf CPhIOAccess_Base::ReleaseDPM(eAreaType, trHWFAddress, IOAccessErrorCode *)
00008ec4 PhMODBUS.elf CPhDiagnostics_Base::PhDiagnosticsTableNew(teDiagErrorCode *)
00008ef4 PhMODBUS.elf CPhDiagnostics_Base::PhDiagnosticsTableCleared(teDiagErrorCode *)
00008f24 PhMODBUS.elf CPhOLU_Base::PrepareForFirmwareDownload(trHWFAddress const *, unsigned long, eOLUStatus *)
00008f5c PhMODBUS.elf CPhOLU_Base::PrepareForApplicationStop(trHWFAddress const *, eOLUStatus *)
00008f90 PhMODBUS.elf CPhOLU_Base::ResumeOperation(trHWFAddress const *, eOLUStatus *)
00008fc4 PhMODBUS.elf CPhOLU_Base::PhResponsibilityForOLU(trHWFAddress const *, eOLUStatus *)
00008ff8 PhMODBUS.elf CPhOLU_Base::PrepareForLeavingOLU(trHWFAddress const *, eOLUStatus *)
0000902c PhMODBUS.elf CPhOLU_Base::PrepareForAppAndConfigDownload(trHWFAddress const *, eOLUStatus *)
00009064 PhMODBUS.elf IPhCommon::IPhCommon(void)
000090d0 PhMODBUS.elf IUnknown::IUnknown(void)
00009128 PhMODBUS.elf CRTFuncTabBegin
00009128 PhMODBUS.elf Letext
00009128 PhMODBUS.elf scprocs
00009134 PhMODBUS.elf printf
00009138 PhMODBUS.elf sprintf
0000913c PhMODBUS.elf sscanf
00009140 PhMODBUS.elf memcpy
00009144 PhMODBUS.elf memset
00009148 PhMODBUS.elf strcat
0000914c PhMODBUS.elf strcmp
00009150 PhMODBUS.elf strlen
00009154 PhMODBUS.elf strncmp
00009158 PhMODBUS.elf strncpy
0000915c PhMODBUS.elf memchr
00009160 PhMODBUS.elf memcmp
00009164 PhMODBUS.elf memmove
00009168 PhMODBUS.elf strchr
0000916c PhMODBUS.elf strcoll
00009170 PhMODBUS.elf strcpy
00009174 PhMODBUS.elf strcspn
00009178 PhMODBUS.elf strncat
0000917c PhMODBUS.elf strpbrk
00009180 PhMODBUS.elf strrchr
00009184 PhMODBUS.elf strspn
00009188 PhMODBUS.elf strstr
0000918c PhMODBUS.elf strtok
00009190 PhMODBUS.elf strxfrm
00009194 PhMODBUS.elf strerror
00009198 PhMODBUS.elf pow
0000919c PhMODBUS.elf acos
000091a0 PhMODBUS.elf asin
000091a4 PhMODBUS.elf atan
000091a8 PhMODBUS.elf atan2
000091ac PhMODBUS.elf ceil
000091b0 PhMODBUS.elf cos
000091b4 PhMODBUS.elf cosh
000091b8 PhMODBUS.elf exp
000091bc PhMODBUS.elf fabs
000091c0 PhMODBUS.elf floor
000091c4 PhMODBUS.elf fmod
000091c8 PhMODBUS.elf frexp
000091cc PhMODBUS.elf ldexp
000091d0 PhMODBUS.elf log
000091d4 PhMODBUS.elf log10
000091d8 PhMODBUS.elf modf
000091dc PhMODBUS.elf sin
000091e0 PhMODBUS.elf sinh
000091e4 PhMODBUS.elf sqrt
000091e8 PhMODBUS.elf tan
000091ec PhMODBUS.elf tanh
000091f0 PhMODBUS.elf acosf
000091f4 PhMODBUS.elf asinf
000091f8 PhMODBUS.elf atanf
000091fc PhMODBUS.elf atan2f
00009200 PhMODBUS.elf ceilf
00009204 PhMODBUS.elf cosf
00009208 PhMODBUS.elf coshf
0000920c PhMODBUS.elf expf
00009210 PhMODBUS.elf fabsf
00009214 PhMODBUS.elf floorf
00009218 PhMODBUS.elf fmodf
0000921c PhMODBUS.elf logf
00009220 PhMODBUS.elf log10f
00009224 PhMODBUS.elf powf
00009228 PhMODBUS.elf sinf
0000922c PhMODBUS.elf sinhf
00009230 PhMODBUS.elf sqrtf
00009234 PhMODBUS.elf tanf
00009238 PhMODBUS.elf tanhf
0000923c PhMODBUS.elf div_r
00009240 PhMODBUS.elf labs
00009244 PhMODBUS.elf strtol
00009248 PhMODBUS.elf free
0000924c PhMODBUS.elf abort
00009250 PhMODBUS.elf abs
00009254 PhMODBUS.elf atof
00009258 PhMODBUS.elf atoi
0000925c PhMODBUS.elf atol
00009260 PhMODBUS.elf bsearch
00009264 PhMODBUS.elf ldiv_r
00009268 PhMODBUS.elf qsort
0000926c PhMODBUS.elf rand
00009270 PhMODBUS.elf srand
00009274 PhMODBUS.elf strtod
00009278 PhMODBUS.elf strtoul
0000927c PhMODBUS.elf malloc
00009280 PhMODBUS.elf __assert
00009284 PhMODBUS.elf time
00009288 PhMODBUS.elf asctime
0000928c PhMODBUS.elf gmtime
00009290 PhMODBUS.elf clock
00009294 PhMODBUS.elf ctime
00009298 PhMODBUS.elf difftime
0000929c PhMODBUS.elf localtime
000092a0 PhMODBUS.elf mktime
000092a4 PhMODBUS.elf strftime
000092a8 PhMODBUS.elf eventcollSem
000092ac PhMODBUS.elf intLock
000092b0 PhMODBUS.elf intUnlock
000092b4 PhMODBUS.elf _fabs
000092b8 PhMODBUS.elf _ddec
000092bc PhMODBUS.elf _d_mul
000092c0 PhMODBUS.elf __floatsidf
000092c4 PhMODBUS.elf _d_sub
000092c8 PhMODBUS.elf _d_add
000092cc PhMODBUS.elf __fixunsdfsi
000092d0 PhMODBUS.elf __extendsfdf2
000092d4 PhMODBUS.elf __adddf3
000092d8 PhMODBUS.elf _dinc
000092dc PhMODBUS.elf __fixdfsi
000092e0 PhMODBUS.elf _d_neg
000092e4 PhMODBUS.elf _d_dtof
000092e8 PhMODBUS.elf _f_qtof
000092ec PhMODBUS.elf _dpfabs
000092f0 PhMODBUS.elf _d_dtoq
000092f4 PhMODBUS.elf _d_div
000092f8 PhMODBUS.elf __negdf2
000092fc PhMODBUS.elf __divdf3
00009300 PhMODBUS.elf __muldf3
00009304 PhMODBUS.elf _d_dtoi
00009308 PhMODBUS.elf _f_ftoq
0000930c PhMODBUS.elf __truncdfsf2
00009310 PhMODBUS.elf _fp_round
00009314 PhMODBUS.elf _d_utod
00009318 PhMODBUS.elf _d_qtod
0000931c PhMODBUS.elf _d_dtou
00009320 PhMODBUS.elf _d_itod
00009324 PhMODBUS.elf __subdf3
00009328 PhMODBUS.elf _f_ftod
0000932c PhMODBUS.elf _d_feq
00009330 PhMODBUS.elf __gtdf2
00009334 PhMODBUS.elf _d_fne
00009338 PhMODBUS.elf _d_cmp
0000933c PhMODBUS.elf _d_flt
00009340 PhMODBUS.elf _d_cmpe
00009344 PhMODBUS.elf __nedf2
00009348 PhMODBUS.elf _d_fgt
0000934c PhMODBUS.elf _d_fle
00009350 PhMODBUS.elf _d_fge
00009354 PhMODBUS.elf _fdec
00009358 PhMODBUS.elf _f_add
0000935c PhMODBUS.elf __divsf3
00009360 PhMODBUS.elf __fixsfsi
00009364 PhMODBUS.elf __subsf3
00009368 PhMODBUS.elf _finc
0000936c PhMODBUS.elf _f_neg
00009370 PhMODBUS.elf _f_sub
00009374 PhMODBUS.elf _f_itof
00009378 PhMODBUS.elf _fabsf
0000937c PhMODBUS.elf _f_utof
00009380 PhMODBUS.elf _fpfabs
00009384 PhMODBUS.elf __floatsisf
00009388 PhMODBUS.elf _f_div
0000938c PhMODBUS.elf __negsf2
00009390 PhMODBUS.elf __mulsf3
00009394 PhMODBUS.elf _f_ftoi
00009398 PhMODBUS.elf _f_mul
0000939c PhMODBUS.elf __fixunssfsi
000093a0 PhMODBUS.elf _f_ftou
000093a4 PhMODBUS.elf __addsf3
000093a8 PhMODBUS.elf _f_feq
000093ac PhMODBUS.elf _f_flt
000093b0 PhMODBUS.elf _f_fle
000093b4 PhMODBUS.elf __nesf2
000093b8 PhMODBUS.elf __gtsf2
000093bc PhMODBUS.elf _f_fge
000093c0 PhMODBUS.elf _f_fgt
000093c4 PhMODBUS.elf _f_fne
000093c8 PhMODBUS.elf _f_cmp
000093cc PhMODBUS.elf _f_cmpe
000093d0 PhMODBUS.elf ldexpf
000093d4 PhMODBUS.elf modff
000093d8 PhMODBUS.elf frexpf
000093dc PhMODBUS.elf exadd
000093e0 PhMODBUS.elf exmul
000093e4 PhMODBUS.elf sigmax
000093e8 PhMODBUS.elf exdiv
000093ec PhMODBUS.elf exsub
000093f0 PhMODBUS.elf __eqdf2
000093f4 PhMODBUS.elf __ltdf2
000093f8 PhMODBUS.elf __lesf2
000093fc PhMODBUS.elf __ledf2
00009400 PhMODBUS.elf __eqsf2
00009404 PhMODBUS.elf __ltsf2
00009408 PhMODBUS.elf __gesf2
0000940c PhMODBUS.elf __gedf2
00009410 PhMODBUS.elf __builtin_vec_new
00009414 PhMODBUS.elf __builtin_vec_delete
00009418 PhMODBUS.elf fprintf
0000941c PhMODBUS.elf __stdout
00009420 PhMODBUS.elf __stderr
00009424 PhMODBUS.elf setjmp
00009428 PhMODBUS.elf longjmp
0000942c PhMODBUS.elf CRTFuncTabEnd
0000942c PhMODBUS.elf ecprocs
0000942c PhMODBUS.elf etext
0000942c PhMODBUS.elf sgot2
00009940 PhMODBUS.elf egot2
00009940 PhMODBUS.elf sfixup
00009cc0 PhMODBUS.elf efixup
00009cc0 PhMODBUS.elf m_ModbusLLTag
00009cc4 PhMODBUS.elf m_ModbusLLTag
00009cc8 PhMODBUS.elf m_ModbusLLTag
00009ccc PhMODBUS.elf m_ModbusLLTag
00009cd0 PhMODBUS.elf m_ModbusLLTag
00009cd4 PhMODBUS.elf m_ModbusLLTag
00009cd8 PhMODBUS.elf m_ModbusLLTag
00009cdc PhMODBUS.elf m_ModbusLLTag
00009ce0 PhMODBUS.elf m_ModbusLLTag
00009ce4 PhMODBUS.elf useEXEHEAD
00009d00 PhMODBUS.elf CComCoClass<CPhMODBUS, &CLSID_CPhMODBUS>::m_HeapTag
00009d04 PhMODBUS.elf CPhMODBUS::m_ModbusLLTag
00009f00 PhMODBUS.elf CModbusMessage::m_TagModbus
00009f50 PhMODBUS.elf CModbusMessage virtual table
00009f68 PhMODBUS.elf CPhMODBUS::CPhClient_Base1 virtual table
0000a028 PhMODBUS.elf CPhMODBUS::CPhClient_Base virtual table
0000a0b8 PhMODBUS.elf CPhMODBUS::CPhStatus_Base1 virtual table
0000a0f0 PhMODBUS.elf CPhMODBUS::CPhConfig_Base1 virtual table
0000a170 PhMODBUS.elf CPhMODBUS virtual table
0000a1b0 PhMODBUS.elf IPhClient1 virtual table
0000a270 PhMODBUS.elf IPhClient virtual table
0000a300 PhMODBUS.elf IPhStatus1 virtual table
0000a338 PhMODBUS.elf IPhConfig1 virtual table
0000a3b8 PhMODBUS.elf IUnknown virtual table
0000a3e0 PhMODBUS.elf CompanyName
0000a3e4 PhMODBUS.elf ProductName
0000a3f0 PhMODBUS.elf ProductVersion
0000bc74 PhMODBUS.elf CRCHiTable
0000bd74 PhMODBUS.elf CRCLoTable
0000c000 PhMODBUS.elf CRCHiTable
0000c100 PhMODBUS.elf CRCLoTable
0000d474 PhMODBUS.elf CLSID_CPhMODBUS
0000d490 PhMODBUS.elf PHproperties
0000d498 PhMODBUS.elf CMirroredObject::c_pMirroredObjectMgrImpl
0000d49c PhMODBUS.elf CMirroredObjectAgent::c_pHeapCallback
0000d4a0 PhMODBUS.elf CMirroredObjectAgent::c_AgentTag
0000d4f4 PhMODBUS.elf GUID_NULL
0000d508 PhMODBUS.elf IID_IPhCommonCB
0000d518 PhMODBUS.elf IID_IPhConfigCB
0000d528 PhMODBUS.elf IID_IPhConfigCB1
0000d538 PhMODBUS.elf IID_IPhIOAccessCB
0000d548 PhMODBUS.elf IID_IPhExternalConfigCB1
0000d558 PhMODBUS.elf IID_IPhExternalConfigCB2
0000d568 PhMODBUS.elf IID_IPhExternalConfigCB3
0000d578 PhMODBUS.elf IID_IPhOLUCB
0000d588 PhMODBUS.elf IID_IPhCommon
0000d598 PhMODBUS.elf IID_IPhConfig1
0000d5a8 PhMODBUS.elf IID_IPhStatus1
0000d5b8 PhMODBUS.elf IID_IPhClient
0000d5c8 PhMODBUS.elf IID_IPhClient1
0000d5d8 PhMODBUS.elf IID_IPhDiagnostics
0000d5e8 PhMODBUS.elf IID_IPhIOAccess
0000d5f8 PhMODBUS.elf IID_IPhSafeConfig
0000d608 PhMODBUS.elf IID_IPhSafeConfig1
0000d618 PhMODBUS.elf IID_IPhSimulation
0000d628 PhMODBUS.elf IID_IPhOLU
0000d638 PhMODBUS.elf IID_IHeapCallback
0000d648 PhMODBUS.elf IID_ISystemUtilitiesCallback
0000d658 PhMODBUS.elf IID_ISystemUtilitiesCallback1
0000d668 PhMODBUS.elf IID_ISystemUtilitiesCallback2
0000d678 PhMODBUS.elf IID_IEventMgrCallback
0000d688 PhMODBUS.elf IID_IEventMgrCallback1
0000d698 PhMODBUS.elf IID_ISysClockCallback
0000d6a8 PhMODBUS.elf IID_ISysClockCallback1
0000d6b8 PhMODBUS.elf IID_ISysClockCallback2
0000d6c8 PhMODBUS.elf IID_ISysClockCallback3
0000d6d8 PhMODBUS.elf IID_IVarServerCallback
0000d6e8 PhMODBUS.elf IID_IVOSCallback
0000d6f8 PhMODBUS.elf IID_INetwClockSynchCallback
0000d708 PhMODBUS.elf IID_IConfigCBCallback1
0000d718 PhMODBUS.elf IID_IConfigCBCallback2
0000d728 PhMODBUS.elf IID_IConfigCBCallback3
0000d738 PhMODBUS.elf IID_IExternalConfigCBCallback
0000d748 PhMODBUS.elf IID_IExternalConfigCBCallback2
0000d758 PhMODBUS.elf IID_IExternalConfigCBCallback3
0000d768 PhMODBUS.elf IID_IExternalConfigCBCallback4
0000d778 PhMODBUS.elf IID_IMessagesCBCallback
0000d788 PhMODBUS.elf IID_IAIPAccessCBCallback
0000d798 PhMODBUS.elf IID_IOLUCBCallback
0000d7a8 PhMODBUS.elf IID_ISystemUtilitiesCBCallback1
0000d7b8 PhMODBUS.elf IID_IConfigCallback1
0000d7c8 PhMODBUS.elf IID_IConfigCallback2
0000d7d8 PhMODBUS.elf IID_IStatusCallback1
0000d7e8 PhMODBUS.elf IID_IGenClientCallback
0000d7f8 PhMODBUS.elf IID_IGenClientCallback1
0000d808 PhMODBUS.elf IID_IDriverFactoryCallback
0000d818 PhMODBUS.elf IID_IDiagnosticsCallback
0000d828 PhMODBUS.elf IID_ISafeConfigCallback
0000d838 PhMODBUS.elf IID_ISafeConfigCallback1
0000d848 PhMODBUS.elf IID_ICRCCallback
0000d858 PhMODBUS.elf IID_IIOAccessCallback
0000d868 PhMODBUS.elf IID_CriticalRegionCallback
0000d878 PhMODBUS.elf IID_VOSExceptionCallback
0000d888 PhMODBUS.elf IID_DrvCommonCallback
0000d898 PhMODBUS.elf IID_ProtectedMirroredHeapCallback
0000d8a8 PhMODBUS.elf IID_SharedMirroredHeapCallback
0000d8b8 PhMODBUS.elf IID_TemporaryMirroredHeapCallback
0000d8c8 PhMODBUS.elf IID_IRestrictedVOSCallback
0000d8d8 PhMODBUS.elf CPhOLU_Base virtual table
0000d930 PhMODBUS.elf CPhDiagnostics_Base virtual table
0000d968 PhMODBUS.elf CPhIOAccess_Base virtual table
0000d9a8 PhMODBUS.elf CPhStatus_Base1 virtual table
0000d9e0 PhMODBUS.elf CPhClient_Base1 virtual table
0000daa0 PhMODBUS.elf CPhClient_Base virtual table
0000db30 PhMODBUS.elf CPhConfig_Base1 virtual table
0000dbb0 PhMODBUS.elf CPhCommon_Base virtual table
0000dbf0 PhMODBUS.elf GUID_NULL
0000dc00 PhMODBUS.elf MaxCompanyNameLen
0000dc04 PhMODBUS.elf MaxProductNameLen
0000dc08 PhMODBUS.elf MaxProductVersionLen
0000dc0c PhMODBUS.elf cMaxNrOfHWFAdrLevels
0000dc10 PhMODBUS.elf cGCWrite
0000dc14 PhMODBUS.elf cGCRead
0000dc18 PhMODBUS.elf cGCSubscription
0000dc1c PhMODBUS.elf cGCRegistration
0000dc20 PhMODBUS.elf cGCAddMemoryAreaArrayNumberPlaces
0000dc24 PhMODBUS.elf cPONotFound
0000dc28 PhMODBUS.elf cGCBusyDisconnecting
0000dc2c PhMODBUS.elf cGCRemovingPO
0000dc30 PhMODBUS.elf cGCParametersMissing
0000dc34 PhMODBUS.elf cGCAlreadyDefined
0000dc38 PhMODBUS.elf cGCTypeNotSupported
0000dc3c PhMODBUS.elf cGCIndexOutOfRange
0000dc40 PhMODBUS.elf cGCTypeNotDefined
0000dc44 PhMODBUS.elf cGCStringMismatch
0000dc48 PhMODBUS.elf cGCFacadeError
0000dc4c PhMODBUS.elf cGCInvalidHandle
0000dc50 PhMODBUS.elf cGCAddedMemoryAreaError
0000dc54 PhMODBUS.elf cGCBSErrorDetected
0000dc58 PhMODBUS.elf cAborted
0000dc5c PhMODBUS.elf cSuccess
0000dc60 PhMODBUS.elf cPending
0000dc64 PhMODBUS.elf cGCDisconnected
0000dc68 PhMODBUS.elf cGCExtendedStatus
0000dc6c PhMODBUS.elf cPHHeapFull
0000dc70 PhMODBUS.elf cPHTypeMismatch
0000dc74 PhMODBUS.elf cPHSizeMismatch
0000dc78 PhMODBUS.elf cPHErrAccessData
0000dc7c PhMODBUS.elf cPHErrProtocolData
0000dc80 PhMODBUS.elf cPHAccessVarNotFound
0000dc84 PhMODBUS.elf cPHErrInvalidPar
0000dc88 PhMODBUS.elf cPHDirAddrFormatNotSupported
0000dc8c PhMODBUS.elf cPHGenericFormatNotSupported
0000dc90 PhMODBUS.elf cPHNotImplemented
0000dc94 PhMODBUS.elf cPHVarDataUnsupportedDirection
0000dc98 PhMODBUS.elf cPHVarDataNotSupported
0000dc9c PhMODBUS.elf cPHRawDataNotSupported
0000dca0 PhMODBUS.elf cPHDriverError
0000dca4 PhMODBUS.elf cPHHardwareError
0000dca8 PhMODBUS.elf cPHTRAdisconnect
0000dcac PhMODBUS.elf cLegacyFormat
0000dcb0 PhMODBUS.elf cDirAddrFormat
0000dcb4 PhMODBUS.elf cGenericFormat
0000dcb8 PhMODBUS.elf eHWFDeviceSpecific1
0000dcbc PhMODBUS.elf eHWFUnitBPrimary
0000dcc0 PhMODBUS.elf cHWFOPCMask
0000dcc4 PhMODBUS.elf cHWFOPCChannelOk
0000dcc8 PhMODBUS.elf cHWFOPCChannelError
0000dccc PhMODBUS.elf cHWFOPCChannelForced
0000dcd0 PhMODBUS.elf cHWFOPCDeviceError
0000dcd4 PhMODBUS.elf cHWFOPCChannelErrorLow
0000dcd8 PhMODBUS.elf cHWFOPCChannelErrorHigh
0000dcdc PhMODBUS.elf cHWFOPCChannelHigh
0000dce0 PhMODBUS.elf cHWFOPCChannelLow
0000dce4 PhMODBUS.elf cHWFChannelRedundant
0000dce8 PhMODBUS.elf cHWFUnitBPrimary
0000dcec PhMODBUS.elf cHWFBackupUnitError
0000dcf0 PhMODBUS.elf cHWFXSPValueUsed
0000dcf4 PhMODBUS.elf cHWFChannelSimulated
0000dcf8 PhMODBUS.elf cHWFChannelForced
0000dcfc PhMODBUS.elf cHWFChannelInverted
0000dd00 PhMODBUS.elf cHWFXSPMask
0000dd04 PhMODBUS.elf cHWFXSPNoSetting
0000dd08 PhMODBUS.elf cHWFXSPValue
0000dd0c PhMODBUS.elf cHWFXSPClear
0000dd10 PhMODBUS.elf cHWFXSPFreeze
0000dd14 PhMODBUS.elf cHWFXSPInvert
0000dd18 PhMODBUS.elf cHWFXSPInitDPM
0000dd1c PhMODBUS.elf HWFNO_XSP_FORCE
0000dd1d PhMODBUS.elf HWFFORCE_OSP
0000dd1e PhMODBUS.elf HWFFORCE_CLEAR
0000dd1f PhMODBUS.elf HWFFORCE_BLOCK_IO_DPM_OUT_WRITE
0000dd20 PhMODBUS.elf HWFFORCE_BLOCK_SM_DPM_OUT_WRITE
0000dd24 PhMODBUS.elf cHWFMaxNrOfChannels
0000dd28 PhMODBUS.elf cHWFStatusErrorsMask
0000dd2c PhMODBUS.elf cHWFRootStatusErrorMask
0000dd30 PhMODBUS.elf cHWFDoNotCopyUnitErrorMask
0000dd34 PhMODBUS.elf cFWUpgradePrimary
0000dd38 PhMODBUS.elf cFWUpgradeBackup
0000dd3c PhMODBUS.elf cNewPhVersion
0000dd40 PhMODBUS.elf cNewPMFirmware
0000dd48 PhMODBUS.elf IPhCommon virtual table
0000dd80 PhMODBUS.elf IUnknown virtual table
00015da8 G _SDA_BASE_ PhMODBUS.elf 
</SYMBOLS>
