<HEAD>
Index of symbols created Thu 03/21/2013 11:47:38.19 
</HEAD>
<SECTIONS=10>
00010000 00017164 .text
00017164 00017580 .got2
00017580 00017974 .fixup
00017974 00017980 .bss
00017980 0001abb8 .data
0001abb8 0001abb8 .sdata
0001abb8 00029960 .stab
00029960 00017164 .comment
00017164 00029be0 .sdata2
00029be0 00029be0 .stabstr
</SECTIONS>
<SYMBOLS=547>
00000000 Ph3964R.elf EXE_HEAD
00000064 Ph3964R.elf CPh3964R::CPh3964R(void)
000001b0 Ph3964R.elf CPh3964R::~CPh3964R(void)
00000294 Ph3964R.elf vosThread(int, int, int, int)
000002b8 Ph3964R.elf CPh3964R::GetProductInfo(unsigned char *, unsigned char *, unsigned char *, unsigned long)
00000350 Ph3964R.elf CPh3964R::SetCommonCallbackInterface(ICommonCallback *)
00000994 Ph3964R.elf CPh3964R::StartThread(void)
00000a70 Ph3964R.elf CPh3964R::createSemaphore(void)
00000ae0 Ph3964R.elf CPh3964R::deleteSemaphore(void)
00000b74 Ph3964R.elf CPh3964R::GetSerialChannelNumber(trHWFAddress)
00000b80 Ph3964R.elf CPh3964R::Deletethread(void)
00000c18 Ph3964R.elf CPh3964R::EmptyingVarDataQueue(int)
00000d90 Ph3964R.elf CPh3964R::Error(char *, char *, unsigned int)
00000e70 Ph3964R.elf CPh3964R::PrepareMessage(char *, char *, char *, unsigned int)
000010bc Ph3964R.elf CPh3964R::PH3964R_Log_Method_Call(int, int, int, int, int, char *)
000011c8 Ph3964R.elf CPh3964R::PH3964R_Get_Trace_Level(void)
00001308 Ph3964R.elf CPh3964R::operator new(unsigned int, IHeapCallback *)
000013bc Ph3964R.elf CPh3964R::heap_delete(void)
00001428 Ph3964R.elf CPh3964R::QueryInterface(_GUID const &, void **)
00001568 Ph3964R.elf CPh3964R::AddRef(void)
00001580 Ph3964R.elf CPh3964R::Release(void)
000015fc Ph3964R.elf Letext
00001600 Ph3964R.elf CPh3964R::ConnectReq(unsigned long, unsigned long *, int *)
00001724 Ph3964R.elf CPh3964R::DisconnectReq(unsigned long, unsigned long, int *)
0000183c Ph3964R.elf CPh3964R::ReadVarReq(unsigned long, int *)
00001ae4 Ph3964R.elf CPh3964R::WriteVarReq(unsigned long, int *)
00001e54 Ph3964R.elf CPh3964R::ReadRawReq(unsigned long, int *)
00001eb4 Ph3964R.elf CPh3964R::WriteRawReq(unsigned long, int *)
00001f18 Ph3964R.elf CPh3964R::AbortRawReq(unsigned long, int *)
00001f7c Ph3964R.elf CPh3964R::AbortVarReq(unsigned long, int *)
0000214c Ph3964R.elf CPh3964R::GetExtendedStatusSize(unsigned long, int *, int *)
000021b0 Ph3964R.elf CPh3964R::GetExtendedStatus(unsigned long, int, teIEC1131Type *, tGCValue *, int *)
00002214 Ph3964R.elf CPh3964R::SetStatus(unsigned long, int, int *)
00002278 Ph3964R.elf CPh3964R::ReadRes(unsigned long, int, int *)
000022dc Ph3964R.elf CPh3964R::WriteRes(unsigned long, int, int *)
00002340 Ph3964R.elf CPh3964R::TimeoutAbortVarReq(unsigned long, int *)
000023e4 Ph3964R.elf Letext
000023e8 Ph3964R.elf CPh3964R::PrepareForTermination(teHWFErrorCode *)
000024f4 Ph3964R.elf CPh3964R::PerformSwitchover(trHWFAddress, teHWFErrorCode *)
00002554 Ph3964R.elf CPh3964R::PerformFailover(trHWFAddress, teHWFErrorCode *)
000025b4 Ph3964R.elf CPh3964R::StartUsingDevice(trHWFAddress, teHWFErrorCode *)
00002614 Ph3964R.elf CPh3964R::RemoveHWConfiguration(trHWFAddress, teHWFErrorCode *)
00002704 Ph3964R.elf CPh3964R::RemoveIoConnection(unsigned long, teHWFErrorCode *)
00002764 Ph3964R.elf CPh3964R::PhResponsibilityForRestart(trHWFAddress, teHWFErrorCode *)
0000282c Ph3964R.elf CPh3964R::PhResponsibility(trHWFAddress, teHWFErrorCode *)
00002cbc Ph3964R.elf CPh3964R::PhResponsibilityForBackupDevice(trHWFAddress, teHWFErrorCode *)
00002d20 Ph3964R.elf CPh3964R::PhResponsibilityForHotInsert(trHWFAddress, teHWFErrorCode *)
000030cc Ph3964R.elf CPh3964R::StartUsingIoConnection(trHWFAddress, unsigned long, teHWFErrorCode *)
0000312c Ph3964R.elf Letext
00003130 Ph3964R.elf CPh3964R::KickWatchdog(unsigned short *, teHWFErrorCode *)
0000321c Ph3964R.elf CPh3964R::GetStatus(trHWFAddress, teHWFUnitKind, teHWFStatusType *, teHWFExtStatusType *, teHWFErrorCode *)
0000327c Ph3964R.elf Letext
00003280 Ph3964R.elf CPh3964R::ThreadWork(void)
00003544 Ph3964R.elf CPh3964R::ProcessVarData(unsigned long, unsigned long, int *)
000037ec Ph3964R.elf CPh3964R::Send3964RSetUpSignal(unsigned long, unsigned long, int *)
00003938 Ph3964R.elf CPh3964R::Poll3964RMasterReceive(unsigned long, int *)
00003e00 Ph3964R.elf CPh3964R::SiemSendRetry(void)
00003f50 Ph3964R.elf CPh3964R::DoWaitToSendState(void)
0000419c Ph3964R.elf CPh3964R::Received3964RSignal(unsigned char *, int, unsigned long)
00004334 Ph3964R.elf CPh3964R::SiemRecRetry(void)
000044a4 Ph3964R.elf CPh3964R::Clear3964RReceive(void)
00004520 Ph3964R.elf CPh3964R::Receive3964RResponse(bool *)
00004ba8 Ph3964R.elf CPh3964R::Build3964RTelegram(unsigned long, unsigned long, int *)
000056f4 Ph3964R.elf CPh3964R::SendDataTo1131(unsigned long, int *)
00005b98 Ph3964R.elf CPh3964R::Send3964RSignal(unsigned char)
00005c44 Ph3964R.elf CPh3964R::XORoctets(unsigned char *, int, int)
00005d10 Ph3964R.elf CPh3964R::InitiateConn(void)
00005da4 Ph3964R.elf Letext
00005da8 Ph3964R.elf foo(void)
00005e10 Ph3964R.elf ObjectFactory
00005f54 Ph3964R.elf Letext
00005f58 Ph3964R.elf __pure_virtual
00005fbc Ph3964R.elf __builtin_delete
0000601c Ph3964R.elf Letext
0000601c Ph3964R.elf Letext
0000601c Ph3964R.elf Letext
00006020 Ph3964R.elf CPhCommon_Base::CPhCommon_Base(void)
0000608c Ph3964R.elf CPhCommon_Base::~CPhCommon_Base(void)
00006104 Ph3964R.elf CPhCommon_Base::GetProductInfo(unsigned char *, unsigned char *, unsigned char *, unsigned long)
00006140 Ph3964R.elf CPhCommon_Base::SetCommonCallbackInterface(ICommonCallback *)
00006170 Ph3964R.elf CPhConfig_Base1::PrepareForTermination(teHWFErrorCode *)
000061a0 Ph3964R.elf CPhConfig_Base1::RemoveHWConfiguration(trHWFAddress, teHWFErrorCode *)
000061d4 Ph3964R.elf CPhConfig_Base1::RemoveIoConnection(unsigned long, teHWFErrorCode *)
00006208 Ph3964R.elf CPhConfig_Base1::PhResponsibilityForRestart(trHWFAddress, teHWFErrorCode *)
0000623c Ph3964R.elf CPhConfig_Base1::PhResponsibility(trHWFAddress, teHWFErrorCode *)
00006270 Ph3964R.elf CPhConfig_Base1::StartUsingIoConnection(trHWFAddress, unsigned long, teHWFErrorCode *)
000062a8 Ph3964R.elf CPhConfig_Base1::PhResponsibilityForBackupDevice(trHWFAddress, teHWFErrorCode *)
000062dc Ph3964R.elf CPhConfig_Base1::PhResponsibilityForHotInsert(trHWFAddress, teHWFErrorCode *)
00006310 Ph3964R.elf CPhConfig_Base1::PerformSwitchover(trHWFAddress, teHWFErrorCode *)
00006344 Ph3964R.elf CPhConfig_Base1::StartUsingDevice(trHWFAddress, teHWFErrorCode *)
00006378 Ph3964R.elf CPhConfig_Base1::PerformFailover(trHWFAddress, teHWFErrorCode *)
000063ac Ph3964R.elf CPhClient_Base::ConnectReq(unsigned long, unsigned long *, int *)
000063e4 Ph3964R.elf CPhClient_Base::DisconnectReq(unsigned long, unsigned long, int *)
0000641c Ph3964R.elf CPhClient_Base::ReadVarReq(unsigned long, int *)
00006450 Ph3964R.elf CPhClient_Base::WriteVarReq(unsigned long, int *)
00006484 Ph3964R.elf CPhClient_Base::ReadRawReq(unsigned long, int *)
000064b8 Ph3964R.elf CPhClient_Base::WriteRawReq(unsigned long, int *)
000064ec Ph3964R.elf CPhClient_Base::AbortRawReq(unsigned long, int *)
00006520 Ph3964R.elf CPhClient_Base::AbortVarReq(unsigned long, int *)
00006554 Ph3964R.elf CPhClient_Base::GetExtendedStatusSize(unsigned long, int *, int *)
0000658c Ph3964R.elf CPhClient_Base::GetExtendedStatus(unsigned long, int, teIEC1131Type *, tGCValue *, int *)
000065cc Ph3964R.elf CPhClient_Base::SetStatus(unsigned long, int, int *)
00006604 Ph3964R.elf CPhClient_Base::ReadRes(unsigned long, int, int *)
0000663c Ph3964R.elf CPhClient_Base::WriteRes(unsigned long, int, int *)
00006674 Ph3964R.elf CPhClient_Base1::ConnectReq(unsigned long, unsigned long *, int *)
000066ac Ph3964R.elf CPhClient_Base1::DisconnectReq(unsigned long, unsigned long, int *)
000066e4 Ph3964R.elf CPhClient_Base1::ReadVarReq(unsigned long, int *)
00006718 Ph3964R.elf CPhClient_Base1::WriteVarReq(unsigned long, int *)
0000674c Ph3964R.elf CPhClient_Base1::RegisterVarReq(unsigned long, int *)
00006780 Ph3964R.elf CPhClient_Base1::ReadRawReq(unsigned long, int *)
000067b4 Ph3964R.elf CPhClient_Base1::WriteRawReq(unsigned long, int *)
000067e8 Ph3964R.elf CPhClient_Base1::AbortRawReq(unsigned long, int *)
0000681c Ph3964R.elf CPhClient_Base1::AbortVarReq(unsigned long, int *)
00006850 Ph3964R.elf CPhClient_Base1::TimeoutAbortVarReq(unsigned long, int *)
000068e0 Ph3964R.elf CPhClient_Base1::GetExtendedStatusSize(unsigned long, int *, int *)
00006918 Ph3964R.elf CPhClient_Base1::GetExtendedStatus(unsigned long, int, teIEC1131Type *, tGCValue *, int *)
00006958 Ph3964R.elf CPhClient_Base1::BufferTakeForReceive(unsigned long, int *)
0000698c Ph3964R.elf CPhClient_Base1::BufferGiveForReceive(unsigned long, int, int *)
000069c4 Ph3964R.elf CPhClient_Base1::BufferTakeForSend(unsigned long, unsigned int, int *)
000069fc Ph3964R.elf CPhClient_Base1::BufferGiveForSend(unsigned long, unsigned int, int, int *)
00006a38 Ph3964R.elf CPhClient_Base1::SetStatus(unsigned long, int, int *)
00006a70 Ph3964R.elf CPhClient_Base1::ReadRes(unsigned long, int, int *)
00006aa8 Ph3964R.elf CPhClient_Base1::WriteRes(unsigned long, int, int *)
00006ae0 Ph3964R.elf CPhStatus_Base1::KickWatchdog(unsigned short *, teHWFErrorCode *)
00006b14 Ph3964R.elf CPhStatus_Base1::GetStatus(trHWFAddress, teHWFUnitKind, unsigned long *, unsigned long *, teHWFErrorCode *)
00006b54 Ph3964R.elf CPhIOAccess_Base::GetCopyRoutineReference(unsigned int, void (**)(short, void *, void *), IOAccessErrorCode *)
00006b8c Ph3964R.elf CPhIOAccess_Base::ObtainDPM(eAreaType, trHWFAddress, IOAccessErrorCode *)
00006bc4 Ph3964R.elf CPhIOAccess_Base::ReleaseDPM(eAreaType, trHWFAddress, IOAccessErrorCode *)
00006bfc Ph3964R.elf CPhDiagnostics_Base::PhDiagnosticsTableNew(teDiagErrorCode *)
00006c2c Ph3964R.elf CPhDiagnostics_Base::PhDiagnosticsTableCleared(teDiagErrorCode *)
00006c5c Ph3964R.elf CPhOLU_Base::PrepareForFirmwareDownload(trHWFAddress const *, unsigned long, eOLUStatus *)
00006c94 Ph3964R.elf CPhOLU_Base::PrepareForApplicationStop(trHWFAddress const *, eOLUStatus *)
00006cc8 Ph3964R.elf CPhOLU_Base::ResumeOperation(trHWFAddress const *, eOLUStatus *)
00006cfc Ph3964R.elf CPhOLU_Base::PhResponsibilityForOLU(trHWFAddress const *, eOLUStatus *)
00006d30 Ph3964R.elf CPhOLU_Base::PrepareForLeavingOLU(trHWFAddress const *, eOLUStatus *)
00006d64 Ph3964R.elf CPhOLU_Base::PrepareForAppAndConfigDownload(trHWFAddress const *, eOLUStatus *)
00006d9c Ph3964R.elf IPhCommon::IPhCommon(void)
00006e08 Ph3964R.elf IUnknown::IUnknown(void)
00006e60 Ph3964R.elf CRTFuncTabBegin
00006e60 Ph3964R.elf Letext
00006e60 Ph3964R.elf scprocs
00006e6c Ph3964R.elf printf
00006e70 Ph3964R.elf sprintf
00006e74 Ph3964R.elf sscanf
00006e78 Ph3964R.elf memcpy
00006e7c Ph3964R.elf memset
00006e80 Ph3964R.elf strcat
00006e84 Ph3964R.elf strcmp
00006e88 Ph3964R.elf strlen
00006e8c Ph3964R.elf strncmp
00006e90 Ph3964R.elf strncpy
00006e94 Ph3964R.elf memchr
00006e98 Ph3964R.elf memcmp
00006e9c Ph3964R.elf memmove
00006ea0 Ph3964R.elf strchr
00006ea4 Ph3964R.elf strcoll
00006ea8 Ph3964R.elf strcpy
00006eac Ph3964R.elf strcspn
00006eb0 Ph3964R.elf strncat
00006eb4 Ph3964R.elf strpbrk
00006eb8 Ph3964R.elf strrchr
00006ebc Ph3964R.elf strspn
00006ec0 Ph3964R.elf strstr
00006ec4 Ph3964R.elf strtok
00006ec8 Ph3964R.elf strxfrm
00006ecc Ph3964R.elf strerror
00006ed0 Ph3964R.elf pow
00006ed4 Ph3964R.elf acos
00006ed8 Ph3964R.elf asin
00006edc Ph3964R.elf atan
00006ee0 Ph3964R.elf atan2
00006ee4 Ph3964R.elf ceil
00006ee8 Ph3964R.elf cos
00006eec Ph3964R.elf cosh
00006ef0 Ph3964R.elf exp
00006ef4 Ph3964R.elf fabs
00006ef8 Ph3964R.elf floor
00006efc Ph3964R.elf fmod
00006f00 Ph3964R.elf frexp
00006f04 Ph3964R.elf ldexp
00006f08 Ph3964R.elf log
00006f0c Ph3964R.elf log10
00006f10 Ph3964R.elf modf
00006f14 Ph3964R.elf sin
00006f18 Ph3964R.elf sinh
00006f1c Ph3964R.elf sqrt
00006f20 Ph3964R.elf tan
00006f24 Ph3964R.elf tanh
00006f28 Ph3964R.elf acosf
00006f2c Ph3964R.elf asinf
00006f30 Ph3964R.elf atanf
00006f34 Ph3964R.elf atan2f
00006f38 Ph3964R.elf ceilf
00006f3c Ph3964R.elf cosf
00006f40 Ph3964R.elf coshf
00006f44 Ph3964R.elf expf
00006f48 Ph3964R.elf fabsf
00006f4c Ph3964R.elf floorf
00006f50 Ph3964R.elf fmodf
00006f54 Ph3964R.elf logf
00006f58 Ph3964R.elf log10f
00006f5c Ph3964R.elf powf
00006f60 Ph3964R.elf sinf
00006f64 Ph3964R.elf sinhf
00006f68 Ph3964R.elf sqrtf
00006f6c Ph3964R.elf tanf
00006f70 Ph3964R.elf tanhf
00006f74 Ph3964R.elf div_r
00006f78 Ph3964R.elf labs
00006f7c Ph3964R.elf strtol
00006f80 Ph3964R.elf free
00006f84 Ph3964R.elf abort
00006f88 Ph3964R.elf abs
00006f8c Ph3964R.elf atof
00006f90 Ph3964R.elf atoi
00006f94 Ph3964R.elf atol
00006f98 Ph3964R.elf bsearch
00006f9c Ph3964R.elf ldiv_r
00006fa0 Ph3964R.elf qsort
00006fa4 Ph3964R.elf rand
00006fa8 Ph3964R.elf srand
00006fac Ph3964R.elf strtod
00006fb0 Ph3964R.elf strtoul
00006fb4 Ph3964R.elf malloc
00006fb8 Ph3964R.elf __assert
00006fbc Ph3964R.elf time
00006fc0 Ph3964R.elf asctime
00006fc4 Ph3964R.elf gmtime
00006fc8 Ph3964R.elf clock
00006fcc Ph3964R.elf ctime
00006fd0 Ph3964R.elf difftime
00006fd4 Ph3964R.elf localtime
00006fd8 Ph3964R.elf mktime
00006fdc Ph3964R.elf strftime
00006fe0 Ph3964R.elf eventcollSem
00006fe4 Ph3964R.elf intLock
00006fe8 Ph3964R.elf intUnlock
00006fec Ph3964R.elf _fabs
00006ff0 Ph3964R.elf _ddec
00006ff4 Ph3964R.elf _d_mul
00006ff8 Ph3964R.elf __floatsidf
00006ffc Ph3964R.elf _d_sub
00007000 Ph3964R.elf _d_add
00007004 Ph3964R.elf __fixunsdfsi
00007008 Ph3964R.elf __extendsfdf2
0000700c Ph3964R.elf __adddf3
00007010 Ph3964R.elf _dinc
00007014 Ph3964R.elf __fixdfsi
00007018 Ph3964R.elf _d_neg
0000701c Ph3964R.elf _d_dtof
00007020 Ph3964R.elf _f_qtof
00007024 Ph3964R.elf _dpfabs
00007028 Ph3964R.elf _d_dtoq
0000702c Ph3964R.elf _d_div
00007030 Ph3964R.elf __negdf2
00007034 Ph3964R.elf __divdf3
00007038 Ph3964R.elf __muldf3
0000703c Ph3964R.elf _d_dtoi
00007040 Ph3964R.elf _f_ftoq
00007044 Ph3964R.elf __truncdfsf2
00007048 Ph3964R.elf _fp_round
0000704c Ph3964R.elf _d_utod
00007050 Ph3964R.elf _d_qtod
00007054 Ph3964R.elf _d_dtou
00007058 Ph3964R.elf _d_itod
0000705c Ph3964R.elf __subdf3
00007060 Ph3964R.elf _f_ftod
00007064 Ph3964R.elf _d_feq
00007068 Ph3964R.elf __gtdf2
0000706c Ph3964R.elf _d_fne
00007070 Ph3964R.elf _d_cmp
00007074 Ph3964R.elf _d_flt
00007078 Ph3964R.elf _d_cmpe
0000707c Ph3964R.elf __nedf2
00007080 Ph3964R.elf _d_fgt
00007084 Ph3964R.elf _d_fle
00007088 Ph3964R.elf _d_fge
0000708c Ph3964R.elf _fdec
00007090 Ph3964R.elf _f_add
00007094 Ph3964R.elf __divsf3
00007098 Ph3964R.elf __fixsfsi
0000709c Ph3964R.elf __subsf3
000070a0 Ph3964R.elf _finc
000070a4 Ph3964R.elf _f_neg
000070a8 Ph3964R.elf _f_sub
000070ac Ph3964R.elf _f_itof
000070b0 Ph3964R.elf _fabsf
000070b4 Ph3964R.elf _f_utof
000070b8 Ph3964R.elf _fpfabs
000070bc Ph3964R.elf __floatsisf
000070c0 Ph3964R.elf _f_div
000070c4 Ph3964R.elf __negsf2
000070c8 Ph3964R.elf __mulsf3
000070cc Ph3964R.elf _f_ftoi
000070d0 Ph3964R.elf _f_mul
000070d4 Ph3964R.elf __fixunssfsi
000070d8 Ph3964R.elf _f_ftou
000070dc Ph3964R.elf __addsf3
000070e0 Ph3964R.elf _f_feq
000070e4 Ph3964R.elf _f_flt
000070e8 Ph3964R.elf _f_fle
000070ec Ph3964R.elf __nesf2
000070f0 Ph3964R.elf __gtsf2
000070f4 Ph3964R.elf _f_fge
000070f8 Ph3964R.elf _f_fgt
000070fc Ph3964R.elf _f_fne
00007100 Ph3964R.elf _f_cmp
00007104 Ph3964R.elf _f_cmpe
00007108 Ph3964R.elf ldexpf
0000710c Ph3964R.elf modff
00007110 Ph3964R.elf frexpf
00007114 Ph3964R.elf exadd
00007118 Ph3964R.elf exmul
0000711c Ph3964R.elf sigmax
00007120 Ph3964R.elf exdiv
00007124 Ph3964R.elf exsub
00007128 Ph3964R.elf __eqdf2
0000712c Ph3964R.elf __ltdf2
00007130 Ph3964R.elf __lesf2
00007134 Ph3964R.elf __ledf2
00007138 Ph3964R.elf __eqsf2
0000713c Ph3964R.elf __ltsf2
00007140 Ph3964R.elf __gesf2
00007144 Ph3964R.elf __gedf2
00007148 Ph3964R.elf __builtin_vec_new
0000714c Ph3964R.elf __builtin_vec_delete
00007150 Ph3964R.elf fprintf
00007154 Ph3964R.elf __stdout
00007158 Ph3964R.elf __stderr
0000715c Ph3964R.elf setjmp
00007160 Ph3964R.elf longjmp
00007164 Ph3964R.elf CRTFuncTabEnd
00007164 Ph3964R.elf ecprocs
00007164 Ph3964R.elf etext
00007164 Ph3964R.elf sgot2
00007580 Ph3964R.elf egot2
00007580 Ph3964R.elf sfixup
00007974 Ph3964R.elf efixup
00007974 Ph3964R.elf useEXEHEAD
0000798c Ph3964R.elf cSWModbusSrcNameSuff
0000799c Ph3964R.elf cSWInsumSrcNameSuff
000079ac Ph3964R.elf cSWProfibusSrcNameSuff
000079bc Ph3964R.elf cSWMB300SrcNameSuff
000079c8 Ph3964R.elf cSWS100SrcNameSuff
000079d8 Ph3964R.elf CComCoClass<CPh3964R, &CLSID_CPh3964R>::m_HeapTag
00008090 Ph3964R.elf CPh3964R::CPhClient_Base1 virtual table
00008150 Ph3964R.elf CPh3964R::CPhClient_Base virtual table
000081e0 Ph3964R.elf CPh3964R::CPhStatus_Base1 virtual table
00008218 Ph3964R.elf CPh3964R::CPhConfig_Base1 virtual table
00008280 G _SDA2_BASE_ Ph3964R.elf 
00008298 Ph3964R.elf CPh3964R virtual table
000082d8 Ph3964R.elf IPhClient1 virtual table
00008398 Ph3964R.elf IPhClient virtual table
00008428 Ph3964R.elf IPhStatus1 virtual table
00008460 Ph3964R.elf IPhConfig1 virtual table
000084e0 Ph3964R.elf IUnknown virtual table
00008508 Ph3964R.elf CompanyName
0000850c Ph3964R.elf ProductName
00008514 Ph3964R.elf ProductVersion
0000853c Ph3964R.elf cSWModbusSrcNameSuff
0000854c Ph3964R.elf cSWInsumSrcNameSuff
0000855c Ph3964R.elf cSWProfibusSrcNameSuff
0000856c Ph3964R.elf cSWMB300SrcNameSuff
00008578 Ph3964R.elf cSWS100SrcNameSuff
00008950 Ph3964R.elf cSWModbusSrcNameSuff
00008960 Ph3964R.elf cSWInsumSrcNameSuff
00008970 Ph3964R.elf cSWProfibusSrcNameSuff
00008980 Ph3964R.elf cSWMB300SrcNameSuff
0000898c Ph3964R.elf cSWS100SrcNameSuff
00008f60 Ph3964R.elf cSWModbusSrcNameSuff
00008f70 Ph3964R.elf cSWInsumSrcNameSuff
00008f80 Ph3964R.elf cSWProfibusSrcNameSuff
00008f90 Ph3964R.elf cSWMB300SrcNameSuff
00008f9c Ph3964R.elf cSWS100SrcNameSuff
0000901c Ph3964R.elf cSWModbusSrcNameSuff
0000902c Ph3964R.elf cSWInsumSrcNameSuff
0000903c Ph3964R.elf cSWProfibusSrcNameSuff
0000904c Ph3964R.elf cSWMB300SrcNameSuff
00009058 Ph3964R.elf cSWS100SrcNameSuff
0000a11c Ph3964R.elf cSWModbusSrcNameSuff
0000a12c Ph3964R.elf cSWInsumSrcNameSuff
0000a13c Ph3964R.elf cSWProfibusSrcNameSuff
0000a14c Ph3964R.elf cSWMB300SrcNameSuff
0000a158 Ph3964R.elf cSWS100SrcNameSuff
0000a168 Ph3964R.elf CLSID_CPh3964R
0000a2a0 Ph3964R.elf PHproperties
0000a2a8 Ph3964R.elf CMirroredObject::c_pMirroredObjectMgrImpl
0000a2ac Ph3964R.elf CMirroredObjectAgent::c_pHeapCallback
0000a2b0 Ph3964R.elf CMirroredObjectAgent::c_AgentTag
0000a304 Ph3964R.elf GUID_NULL
0000a318 Ph3964R.elf IID_IPhCommonCB
0000a328 Ph3964R.elf IID_IPhConfigCB
0000a338 Ph3964R.elf IID_IPhConfigCB1
0000a348 Ph3964R.elf IID_IPhIOAccessCB
0000a358 Ph3964R.elf IID_IPhExternalConfigCB1
0000a368 Ph3964R.elf IID_IPhExternalConfigCB2
0000a378 Ph3964R.elf IID_IPhExternalConfigCB3
0000a388 Ph3964R.elf IID_IPhOLUCB
0000a398 Ph3964R.elf IID_IPhCommon
0000a3a8 Ph3964R.elf IID_IPhConfig1
0000a3b8 Ph3964R.elf IID_IPhStatus1
0000a3c8 Ph3964R.elf IID_IPhClient
0000a3d8 Ph3964R.elf IID_IPhClient1
0000a3e8 Ph3964R.elf IID_IPhDiagnostics
0000a3f8 Ph3964R.elf IID_IPhIOAccess
0000a408 Ph3964R.elf IID_IPhSafeConfig
0000a418 Ph3964R.elf IID_IPhSafeConfig1
0000a428 Ph3964R.elf IID_IPhSimulation
0000a438 Ph3964R.elf IID_IPhOLU
0000a448 Ph3964R.elf IID_IHeapCallback
0000a458 Ph3964R.elf IID_ISystemUtilitiesCallback
0000a468 Ph3964R.elf IID_ISystemUtilitiesCallback1
0000a478 Ph3964R.elf IID_ISystemUtilitiesCallback2
0000a488 Ph3964R.elf IID_IEventMgrCallback
0000a498 Ph3964R.elf IID_IEventMgrCallback1
0000a4a8 Ph3964R.elf IID_ISysClockCallback
0000a4b8 Ph3964R.elf IID_ISysClockCallback1
0000a4c8 Ph3964R.elf IID_ISysClockCallback2
0000a4d8 Ph3964R.elf IID_ISysClockCallback3
0000a4e8 Ph3964R.elf IID_IVarServerCallback
0000a4f8 Ph3964R.elf IID_IVOSCallback
0000a508 Ph3964R.elf IID_INetwClockSynchCallback
0000a518 Ph3964R.elf IID_IConfigCBCallback1
0000a528 Ph3964R.elf IID_IConfigCBCallback2
0000a538 Ph3964R.elf IID_IConfigCBCallback3
0000a548 Ph3964R.elf IID_IExternalConfigCBCallback
0000a558 Ph3964R.elf IID_IExternalConfigCBCallback2
0000a568 Ph3964R.elf IID_IExternalConfigCBCallback3
0000a578 Ph3964R.elf IID_IExternalConfigCBCallback4
0000a588 Ph3964R.elf IID_IMessagesCBCallback
0000a598 Ph3964R.elf IID_IAIPAccessCBCallback
0000a5a8 Ph3964R.elf IID_IOLUCBCallback
0000a5b8 Ph3964R.elf IID_ISystemUtilitiesCBCallback1
0000a5c8 Ph3964R.elf IID_IConfigCallback1
0000a5d8 Ph3964R.elf IID_IConfigCallback2
0000a5e8 Ph3964R.elf IID_IStatusCallback1
0000a5f8 Ph3964R.elf IID_IGenClientCallback
0000a608 Ph3964R.elf IID_IGenClientCallback1
0000a618 Ph3964R.elf IID_IDriverFactoryCallback
0000a628 Ph3964R.elf IID_IDiagnosticsCallback
0000a638 Ph3964R.elf IID_ISafeConfigCallback
0000a648 Ph3964R.elf IID_ISafeConfigCallback1
0000a658 Ph3964R.elf IID_ICRCCallback
0000a668 Ph3964R.elf IID_IIOAccessCallback
0000a678 Ph3964R.elf IID_CriticalRegionCallback
0000a688 Ph3964R.elf IID_VOSExceptionCallback
0000a698 Ph3964R.elf IID_DrvCommonCallback
0000a6a8 Ph3964R.elf IID_ProtectedMirroredHeapCallback
0000a6b8 Ph3964R.elf IID_SharedMirroredHeapCallback
0000a6c8 Ph3964R.elf IID_TemporaryMirroredHeapCallback
0000a6d8 Ph3964R.elf IID_IRestrictedVOSCallback
0000a6e8 Ph3964R.elf CPhOLU_Base virtual table
0000a740 Ph3964R.elf CPhDiagnostics_Base virtual table
0000a778 Ph3964R.elf CPhIOAccess_Base virtual table
0000a7b8 Ph3964R.elf CPhStatus_Base1 virtual table
0000a7f0 Ph3964R.elf CPhClient_Base1 virtual table
0000a8b0 Ph3964R.elf CPhClient_Base virtual table
0000a940 Ph3964R.elf CPhConfig_Base1 virtual table
0000a9c0 Ph3964R.elf CPhCommon_Base virtual table
0000aa00 Ph3964R.elf GUID_NULL
0000aa10 Ph3964R.elf MaxCompanyNameLen
0000aa14 Ph3964R.elf MaxProductNameLen
0000aa18 Ph3964R.elf MaxProductVersionLen
0000aa1c Ph3964R.elf cMaxNrOfHWFAdrLevels
0000aa20 Ph3964R.elf cGCWrite
0000aa24 Ph3964R.elf cGCRead
0000aa28 Ph3964R.elf cGCSubscription
0000aa2c Ph3964R.elf cGCRegistration
0000aa30 Ph3964R.elf cGCAddMemoryAreaArrayNumberPlaces
0000aa34 Ph3964R.elf cPONotFound
0000aa38 Ph3964R.elf cGCBusyDisconnecting
0000aa3c Ph3964R.elf cGCRemovingPO
0000aa40 Ph3964R.elf cGCParametersMissing
0000aa44 Ph3964R.elf cGCAlreadyDefined
0000aa48 Ph3964R.elf cGCTypeNotSupported
0000aa4c Ph3964R.elf cGCIndexOutOfRange
0000aa50 Ph3964R.elf cGCTypeNotDefined
0000aa54 Ph3964R.elf cGCStringMismatch
0000aa58 Ph3964R.elf cGCFacadeError
0000aa5c Ph3964R.elf cGCInvalidHandle
0000aa60 Ph3964R.elf cGCAddedMemoryAreaError
0000aa64 Ph3964R.elf cGCBSErrorDetected
0000aa68 Ph3964R.elf cAborted
0000aa6c Ph3964R.elf cSuccess
0000aa70 Ph3964R.elf cPending
0000aa74 Ph3964R.elf cGCDisconnected
0000aa78 Ph3964R.elf cGCExtendedStatus
0000aa7c Ph3964R.elf cPHHeapFull
0000aa80 Ph3964R.elf cPHTypeMismatch
0000aa84 Ph3964R.elf cPHSizeMismatch
0000aa88 Ph3964R.elf cPHErrAccessData
0000aa8c Ph3964R.elf cPHErrProtocolData
0000aa90 Ph3964R.elf cPHAccessVarNotFound
0000aa94 Ph3964R.elf cPHErrInvalidPar
0000aa98 Ph3964R.elf cPHDirAddrFormatNotSupported
0000aa9c Ph3964R.elf cPHGenericFormatNotSupported
0000aaa0 Ph3964R.elf cPHNotImplemented
0000aaa4 Ph3964R.elf cPHVarDataUnsupportedDirection
0000aaa8 Ph3964R.elf cPHVarDataNotSupported
0000aaac Ph3964R.elf cPHRawDataNotSupported
0000aab0 Ph3964R.elf cPHDriverError
0000aab4 Ph3964R.elf cPHHardwareError
0000aab8 Ph3964R.elf cPHTRAdisconnect
0000aabc Ph3964R.elf cLegacyFormat
0000aac0 Ph3964R.elf cDirAddrFormat
0000aac4 Ph3964R.elf cGenericFormat
0000aac8 Ph3964R.elf eHWFDeviceSpecific1
0000aacc Ph3964R.elf eHWFUnitBPrimary
0000aad0 Ph3964R.elf cHWFOPCMask
0000aad4 Ph3964R.elf cHWFOPCChannelOk
0000aad8 Ph3964R.elf cHWFOPCChannelError
0000aadc Ph3964R.elf cHWFOPCChannelForced
0000aae0 Ph3964R.elf cHWFOPCDeviceError
0000aae4 Ph3964R.elf cHWFOPCChannelErrorLow
0000aae8 Ph3964R.elf cHWFOPCChannelErrorHigh
0000aaec Ph3964R.elf cHWFOPCChannelHigh
0000aaf0 Ph3964R.elf cHWFOPCChannelLow
0000aaf4 Ph3964R.elf cHWFChannelRedundant
0000aaf8 Ph3964R.elf cHWFUnitBPrimary
0000aafc Ph3964R.elf cHWFBackupUnitError
0000ab00 Ph3964R.elf cHWFXSPValueUsed
0000ab04 Ph3964R.elf cHWFChannelSimulated
0000ab08 Ph3964R.elf cHWFChannelForced
0000ab0c Ph3964R.elf cHWFChannelInverted
0000ab10 Ph3964R.elf cHWFXSPMask
0000ab14 Ph3964R.elf cHWFXSPNoSetting
0000ab18 Ph3964R.elf cHWFXSPValue
0000ab1c Ph3964R.elf cHWFXSPClear
0000ab20 Ph3964R.elf cHWFXSPFreeze
0000ab24 Ph3964R.elf cHWFXSPInvert
0000ab28 Ph3964R.elf cHWFXSPInitDPM
0000ab2c Ph3964R.elf HWFNO_XSP_FORCE
0000ab2d Ph3964R.elf HWFFORCE_OSP
0000ab2e Ph3964R.elf HWFFORCE_CLEAR
0000ab2f Ph3964R.elf HWFFORCE_BLOCK_IO_DPM_OUT_WRITE
0000ab30 Ph3964R.elf HWFFORCE_BLOCK_SM_DPM_OUT_WRITE
0000ab34 Ph3964R.elf cHWFMaxNrOfChannels
0000ab38 Ph3964R.elf cHWFStatusErrorsMask
0000ab3c Ph3964R.elf cHWFRootStatusErrorMask
0000ab40 Ph3964R.elf cHWFDoNotCopyUnitErrorMask
0000ab44 Ph3964R.elf cFWUpgradePrimary
0000ab48 Ph3964R.elf cFWUpgradeBackup
0000ab4c Ph3964R.elf cNewPhVersion
0000ab50 Ph3964R.elf cNewPMFirmware
0000ab58 Ph3964R.elf IPhCommon virtual table
0000ab90 Ph3964R.elf IUnknown virtual table
00012bb8 G _SDA_BASE_ Ph3964R.elf 
</SYMBOLS>
